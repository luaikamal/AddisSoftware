#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sample
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DbDemo")]
	public partial class DemoDbDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBillingInfo(BillingInfo instance);
    partial void UpdateBillingInfo(BillingInfo instance);
    partial void DeleteBillingInfo(BillingInfo instance);
    partial void InsertYesNoAnswer(YesNoAnswer instance);
    partial void UpdateYesNoAnswer(YesNoAnswer instance);
    partial void DeleteYesNoAnswer(YesNoAnswer instance);
    partial void InsertCalculation(Calculation instance);
    partial void UpdateCalculation(Calculation instance);
    partial void DeleteCalculation(Calculation instance);
    partial void InsertClubExclusion(ClubExclusion instance);
    partial void UpdateClubExclusion(ClubExclusion instance);
    partial void DeleteClubExclusion(ClubExclusion instance);
    partial void InsertClub(Club instance);
    partial void UpdateClub(Club instance);
    partial void DeleteClub(Club instance);
    partial void InsertClubType(ClubType instance);
    partial void UpdateClubType(ClubType instance);
    partial void DeleteClubType(ClubType instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCoupon(Coupon instance);
    partial void UpdateCoupon(Coupon instance);
    partial void DeleteCoupon(Coupon instance);
    partial void InsertDependency(Dependency instance);
    partial void UpdateDependency(Dependency instance);
    partial void DeleteDependency(Dependency instance);
    partial void InsertFavorite(Favorite instance);
    partial void UpdateFavorite(Favorite instance);
    partial void DeleteFavorite(Favorite instance);
    partial void InsertFileAnswer(FileAnswer instance);
    partial void UpdateFileAnswer(FileAnswer instance);
    partial void DeleteFileAnswer(FileAnswer instance);
    partial void InsertFilterInstance(FilterInstance instance);
    partial void UpdateFilterInstance(FilterInstance instance);
    partial void DeleteFilterInstance(FilterInstance instance);
    partial void InsertFilter(Filter instance);
    partial void UpdateFilter(Filter instance);
    partial void DeleteFilter(Filter instance);
    partial void InsertFilterSession(FilterSession instance);
    partial void UpdateFilterSession(FilterSession instance);
    partial void DeleteFilterSession(FilterSession instance);
    partial void InsertFunctionalArea(FunctionalArea instance);
    partial void UpdateFunctionalArea(FunctionalArea instance);
    partial void DeleteFunctionalArea(FunctionalArea instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertMultipleChoiceAnswer(MultipleChoiceAnswer instance);
    partial void UpdateMultipleChoiceAnswer(MultipleChoiceAnswer instance);
    partial void DeleteMultipleChoiceAnswer(MultipleChoiceAnswer instance);
    partial void InsertMultipleChoiceQuestionInfo(MultipleChoiceQuestionInfo instance);
    partial void UpdateMultipleChoiceQuestionInfo(MultipleChoiceQuestionInfo instance);
    partial void DeleteMultipleChoiceQuestionInfo(MultipleChoiceQuestionInfo instance);
    partial void InsertNumericAnswer(NumericAnswer instance);
    partial void UpdateNumericAnswer(NumericAnswer instance);
    partial void DeleteNumericAnswer(NumericAnswer instance);
    partial void InsertNumericQuestionInfo(NumericQuestionInfo instance);
    partial void UpdateNumericQuestionInfo(NumericQuestionInfo instance);
    partial void DeleteNumericQuestionInfo(NumericQuestionInfo instance);
    partial void InsertOfferLog(OfferLog instance);
    partial void UpdateOfferLog(OfferLog instance);
    partial void DeleteOfferLog(OfferLog instance);
    partial void InsertOffer(Offer instance);
    partial void UpdateOffer(Offer instance);
    partial void DeleteOffer(Offer instance);
    partial void InsertPeerClusterClub(PeerClusterClub instance);
    partial void UpdatePeerClusterClub(PeerClusterClub instance);
    partial void DeletePeerClusterClub(PeerClusterClub instance);
    partial void InsertPeerCluster(PeerCluster instance);
    partial void UpdatePeerCluster(PeerCluster instance);
    partial void DeletePeerCluster(PeerCluster instance);
    partial void InsertPrintSession(PrintSession instance);
    partial void UpdatePrintSession(PrintSession instance);
    partial void DeletePrintSession(PrintSession instance);
    partial void InsertPurchase(Purchase instance);
    partial void UpdatePurchase(Purchase instance);
    partial void DeletePurchase(Purchase instance);
    partial void InsertQuestionGroup(QuestionGroup instance);
    partial void UpdateQuestionGroup(QuestionGroup instance);
    partial void DeleteQuestionGroup(QuestionGroup instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertReportPage(ReportPage instance);
    partial void UpdateReportPage(ReportPage instance);
    partial void DeleteReportPage(ReportPage instance);
    partial void InsertReportPageValue(ReportPageValue instance);
    partial void UpdateReportPageValue(ReportPageValue instance);
    partial void DeleteReportPageValue(ReportPageValue instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSecretAnswer(SecretAnswer instance);
    partial void UpdateSecretAnswer(SecretAnswer instance);
    partial void DeleteSecretAnswer(SecretAnswer instance);
    partial void InsertSecretQuestion(SecretQuestion instance);
    partial void UpdateSecretQuestion(SecretQuestion instance);
    partial void DeleteSecretQuestion(SecretQuestion instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertSkus(Skus instance);
    partial void UpdateSkus(Skus instance);
    partial void DeleteSkus(Skus instance);
    partial void InsertSsoClub(SsoClub instance);
    partial void UpdateSsoClub(SsoClub instance);
    partial void DeleteSsoClub(SsoClub instance);
    partial void InsertSsoUser(SsoUser instance);
    partial void UpdateSsoUser(SsoUser instance);
    partial void DeleteSsoUser(SsoUser instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertStaticReport(StaticReport instance);
    partial void UpdateStaticReport(StaticReport instance);
    partial void DeleteStaticReport(StaticReport instance);
    partial void InsertTextAnswer(TextAnswer instance);
    partial void UpdateTextAnswer(TextAnswer instance);
    partial void DeleteTextAnswer(TextAnswer instance);
    partial void InsertTextQuestionInfo(TextQuestionInfo instance);
    partial void UpdateTextQuestionInfo(TextQuestionInfo instance);
    partial void DeleteTextQuestionInfo(TextQuestionInfo instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DemoDbDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DbDemoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DemoDbDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DemoDbDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DemoDbDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DemoDbDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BillingInfo> BillingInfos
		{
			get
			{
				return this.GetTable<BillingInfo>();
			}
		}
		
		public System.Data.Linq.Table<YesNoAnswer> YesNoAnswers
		{
			get
			{
				return this.GetTable<YesNoAnswer>();
			}
		}
		
		public System.Data.Linq.Table<Calculation> Calculations
		{
			get
			{
				return this.GetTable<Calculation>();
			}
		}
		
		public System.Data.Linq.Table<ClubExclusion> ClubExclusions
		{
			get
			{
				return this.GetTable<ClubExclusion>();
			}
		}
		
		public System.Data.Linq.Table<Club> Clubs
		{
			get
			{
				return this.GetTable<Club>();
			}
		}
		
		public System.Data.Linq.Table<ClubType> ClubTypes
		{
			get
			{
				return this.GetTable<ClubType>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Coupon> Coupons
		{
			get
			{
				return this.GetTable<Coupon>();
			}
		}
		
		public System.Data.Linq.Table<Dependency> Dependencies
		{
			get
			{
				return this.GetTable<Dependency>();
			}
		}
		
		public System.Data.Linq.Table<Favorite> Favorites
		{
			get
			{
				return this.GetTable<Favorite>();
			}
		}
		
		public System.Data.Linq.Table<FileAnswer> FileAnswers
		{
			get
			{
				return this.GetTable<FileAnswer>();
			}
		}
		
		public System.Data.Linq.Table<FilterInstance> FilterInstances
		{
			get
			{
				return this.GetTable<FilterInstance>();
			}
		}
		
		public System.Data.Linq.Table<Filter> Filters
		{
			get
			{
				return this.GetTable<Filter>();
			}
		}
		
		public System.Data.Linq.Table<FilterSession> FilterSessions
		{
			get
			{
				return this.GetTable<FilterSession>();
			}
		}
		
		public System.Data.Linq.Table<FunctionalArea> FunctionalAreas
		{
			get
			{
				return this.GetTable<FunctionalArea>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<MultipleChoiceAnswer> MultipleChoiceAnswers
		{
			get
			{
				return this.GetTable<MultipleChoiceAnswer>();
			}
		}
		
		public System.Data.Linq.Table<MultipleChoiceQuestionInfo> MultipleChoiceQuestionInfos
		{
			get
			{
				return this.GetTable<MultipleChoiceQuestionInfo>();
			}
		}
		
		public System.Data.Linq.Table<NumericAnswer> NumericAnswers
		{
			get
			{
				return this.GetTable<NumericAnswer>();
			}
		}
		
		public System.Data.Linq.Table<NumericQuestionInfo> NumericQuestionInfos
		{
			get
			{
				return this.GetTable<NumericQuestionInfo>();
			}
		}
		
		public System.Data.Linq.Table<OfferLog> OfferLogs
		{
			get
			{
				return this.GetTable<OfferLog>();
			}
		}
		
		public System.Data.Linq.Table<Offer> Offers
		{
			get
			{
				return this.GetTable<Offer>();
			}
		}
		
		public System.Data.Linq.Table<PeerClusterClub> PeerClusterClubs
		{
			get
			{
				return this.GetTable<PeerClusterClub>();
			}
		}
		
		public System.Data.Linq.Table<PeerCluster> PeerClusters
		{
			get
			{
				return this.GetTable<PeerCluster>();
			}
		}
		
		public System.Data.Linq.Table<PrintSession> PrintSessions
		{
			get
			{
				return this.GetTable<PrintSession>();
			}
		}
		
		public System.Data.Linq.Table<Purchase> Purchases
		{
			get
			{
				return this.GetTable<Purchase>();
			}
		}
		
		public System.Data.Linq.Table<QuestionGroup> QuestionGroups
		{
			get
			{
				return this.GetTable<QuestionGroup>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<ReportPage> ReportPages
		{
			get
			{
				return this.GetTable<ReportPage>();
			}
		}
		
		public System.Data.Linq.Table<ReportPageValue> ReportPageValues
		{
			get
			{
				return this.GetTable<ReportPageValue>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<SecretAnswer> SecretAnswers
		{
			get
			{
				return this.GetTable<SecretAnswer>();
			}
		}
		
		public System.Data.Linq.Table<SecretQuestion> SecretQuestions
		{
			get
			{
				return this.GetTable<SecretQuestion>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<Skus> Skus
		{
			get
			{
				return this.GetTable<Skus>();
			}
		}
		
		public System.Data.Linq.Table<SsoClub> SsoClubs
		{
			get
			{
				return this.GetTable<SsoClub>();
			}
		}
		
		public System.Data.Linq.Table<SsoUser> SsoUsers
		{
			get
			{
				return this.GetTable<SsoUser>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<StaticReport> StaticReports
		{
			get
			{
				return this.GetTable<StaticReport>();
			}
		}
		
		public System.Data.Linq.Table<TextAnswer> TextAnswers
		{
			get
			{
				return this.GetTable<TextAnswer>();
			}
		}
		
		public System.Data.Linq.Table<TextQuestionInfo> TextQuestionInfos
		{
			get
			{
				return this.GetTable<TextQuestionInfo>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CopyClubAnswers")]
		public int CopyClubAnswers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceClubID", DbType="Int")] System.Nullable<int> sourceClubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DestClubID", DbType="Int")] System.Nullable<int> destClubID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceClubID, destClubID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAllAnswers")]
		public int DeleteAllAnswers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAllQuestionsInArea")]
		public int DeleteAllQuestionsInArea([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AreaID", DbType="Int")] System.Nullable<int> areaID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), areaID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAllStoredFilters")]
		public int DeleteAllStoredFilters()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteClubAndUsers")]
		public int DeleteClubAndUsers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAggregateNormalizedPercentileWithFilterV2")]
		public int GetAggregateNormalizedPercentileWithFilterV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionIDs", DbType="NVarChar(2000)")] string questionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NormalizeID", DbType="Int")] System.Nullable<int> normalizeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubCount", DbType="Int")] ref System.Nullable<int> clubCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionIDs, normalizeID, year, month, filterID, percentile25, percentile50, percentile75, clubPercentile, clubCount);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(8)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(9)));
			clubCount = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteClubAnswers")]
		public int DeleteClubAnswers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteClubsByType")]
		public int DeleteClubsByType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubTypeID", DbType="Int")] System.Nullable<int> clubTypeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubTypeID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteClubTypeAndEverything")]
		public int DeleteClubTypeAndEverything([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubTypeID", DbType="Int")] System.Nullable<int> clubTypeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubTypeID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteQuestion")]
		public int DeleteQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteStoredFilter")]
		public int DeleteStoredFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filterID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAggregateNormalizedPercentile")]
		public int GetAggregateNormalizedPercentile([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionIDs", DbType="NVarChar(2000)")] string questionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NormalizeID", DbType="Int")] System.Nullable<int> normalizeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionIDs, normalizeID, year, month, percentile25, percentile50, percentile75, clubPercentile);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAggregateNormalizedPercentileV2")]
		public int GetAggregateNormalizedPercentileV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionIDs", DbType="NVarChar(2000)")] string questionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NormalizeID", DbType="Int")] System.Nullable<int> normalizeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubCount", DbType="Int")] ref System.Nullable<int> clubCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionIDs, normalizeID, year, month, percentile25, percentile50, percentile75, clubPercentile, clubCount);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(8)));
			clubCount = ((System.Nullable<int>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAggregateNormalizedPercentileWithFilter")]
		public int GetAggregateNormalizedPercentileWithFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionIDs", DbType="NVarChar(2000)")] string questionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NormalizeID", DbType="Int")] System.Nullable<int> normalizeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionIDs, normalizeID, year, month, filterID, percentile25, percentile50, percentile75, clubPercentile);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(8)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAggregatePercentile")]
		public int GetAggregatePercentile([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionIDs", DbType="NVarChar(2000)")] string questionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionIDs, year, month, percentile25, percentile50, percentile75, clubPercentile);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(4)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNormalizedPercentileWithFilterV2")]
		public int GetNormalizedPercentileWithFilterV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NormalizeID", DbType="Int")] System.Nullable<int> normalizeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubCount", DbType="Int")] ref System.Nullable<int> clubCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionID, normalizeID, year, month, filterID, percentile25, percentile50, percentile75, clubPercentile, clubCount);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(8)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(9)));
			clubCount = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAggregatePercentileV2")]
		public int GetAggregatePercentileV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionIDs", DbType="NVarChar(2000)")] string questionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubCount", DbType="Int")] ref System.Nullable<int> clubCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionIDs, year, month, percentile25, percentile50, percentile75, clubPercentile, clubCount);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(4)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubCount = ((System.Nullable<int>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAggregatePercentileWithFilter")]
		public int GetAggregatePercentileWithFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionIDs", DbType="NVarChar(2000)")] string questionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionIDs, year, month, filterID, percentile25, percentile50, percentile75, clubPercentile);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAggregatePercentileWithFilterV2")]
		public int GetAggregatePercentileWithFilterV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionIDs", DbType="NVarChar(2000)")] string questionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubCount", DbType="Int")] ref System.Nullable<int> clubCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionIDs, year, month, filterID, percentile25, percentile50, percentile75, clubPercentile, clubCount);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(8)));
			clubCount = ((System.Nullable<int>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNormalizedPercentile")]
		public ISingleResult<GetNormalizedPercentileResult> GetNormalizedPercentile([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NormalizeID", DbType="Int")] System.Nullable<int> normalizeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionID, normalizeID, year, month, percentile25, percentile50, percentile75, clubPercentile);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(8)));
			return ((ISingleResult<GetNormalizedPercentileResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNormalizedPercentileV2")]
		public ISingleResult<GetNormalizedPercentileV2Result> GetNormalizedPercentileV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NormalizeID", DbType="Int")] System.Nullable<int> normalizeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubCount", DbType="Int")] ref System.Nullable<int> clubCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionID, normalizeID, year, month, percentile25, percentile50, percentile75, clubPercentile, clubCount);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(8)));
			clubCount = ((System.Nullable<int>)(result.GetParameterValue(9)));
			return ((ISingleResult<GetNormalizedPercentileV2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNormalizedPercentileWithFilter")]
		public int GetNormalizedPercentileWithFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NormalizeID", DbType="Int")] System.Nullable<int> normalizeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionID, normalizeID, year, month, filterID, percentile25, percentile50, percentile75, clubPercentile);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(8)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPercentile")]
		public int GetPercentile([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionID, year, month, percentile25, percentile50, percentile75, clubPercentile);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(4)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PreviewMakeAnswersGlobal")]
		public int PreviewMakeAnswersGlobal([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoveCount", DbType="Int")] ref System.Nullable<int> moveCount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteCount", DbType="Int")] ref System.Nullable<int> deleteCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionID, year, moveCount, deleteCount);
			moveCount = ((System.Nullable<int>)(result.GetParameterValue(2)));
			deleteCount = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPercentileV2")]
		public int GetPercentileV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubCount", DbType="Int")] ref System.Nullable<int> clubCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionID, year, month, percentile25, percentile50, percentile75, clubPercentile, clubCount);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(4)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubCount = ((System.Nullable<int>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPercentileWithFilter")]
		public int GetPercentileWithFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionID, year, month, filterID, percentile25, percentile50, percentile75, clubPercentile);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPercentileWithFilterV2")]
		public int GetPercentileWithFilterV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile25", DbType="Float")] ref System.Nullable<double> percentile25, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile50", DbType="Float")] ref System.Nullable<double> percentile50, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percentile75", DbType="Float")] ref System.Nullable<double> percentile75, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubPercentile", DbType="Float")] ref System.Nullable<double> clubPercentile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubCount", DbType="Int")] ref System.Nullable<int> clubCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, questionID, year, month, filterID, percentile25, percentile50, percentile75, clubPercentile, clubCount);
			percentile25 = ((System.Nullable<double>)(result.GetParameterValue(5)));
			percentile50 = ((System.Nullable<double>)(result.GetParameterValue(6)));
			percentile75 = ((System.Nullable<double>)(result.GetParameterValue(7)));
			clubPercentile = ((System.Nullable<double>)(result.GetParameterValue(8)));
			clubCount = ((System.Nullable<int>)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MakeAnswersGlobal")]
		public int MakeAnswersGlobal([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QuestionID", DbType="Int")] System.Nullable<int> questionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="SmallInt")] System.Nullable<short> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questionID, year);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MergeClubs")]
		public int MergeClubs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceClubID", DbType="Int")] System.Nullable<int> sourceClubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DestClubID", DbType="Int")] System.Nullable<int> destClubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoveData", DbType="Bit")] System.Nullable<bool> moveData, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoveUsers", DbType="Bit")] System.Nullable<bool> moveUsers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeleteSource", DbType="Bit")] System.Nullable<bool> deleteSource)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceClubID, destClubID, moveData, moveUsers, deleteSource);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MoveClubAnswers")]
		public int MoveClubAnswers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceClubID", DbType="Int")] System.Nullable<int> sourceClubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DestClubID", DbType="Int")] System.Nullable<int> destClubID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceClubID, destClubID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RecalculateAllValues")]
		public int RecalculateAllValues()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RecalculateValuesByYear")]
		public int RecalculateValuesByYear([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), year);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RunIndexMaintenance")]
		public ISingleResult<RunIndexMaintenanceResult> RunIndexMaintenance()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<RunIndexMaintenanceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RunIndexMaintenance")]
		public ISingleResult<RunIndexMaintenanceResult1> RunIndexMaintenance1()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<RunIndexMaintenanceResult1>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ToggleDeleteNumericAnswerTrigger")]
		public int ToggleDeleteNumericAnswerTrigger([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisableFlag", DbType="Bit")] System.Nullable<bool> disableFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), disableFlag);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetStoredFilter")]
		public int SetStoredFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FilterID", DbType="Int")] System.Nullable<int> filterID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubList", DbType="VarChar(MAX)")] string clubList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), filterID, clubList);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TemplateCleanupAnswers")]
		public int TemplateCleanupAnswers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClubID", DbType="Int")] System.Nullable<int> clubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="SmallInt")] System.Nullable<short> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="TinyInt")] System.Nullable<byte> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckAllAnswerID", DbType="Int")] System.Nullable<int> checkAllAnswerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clubID, year, month, checkAllAnswerID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TemplateFillInstances")]
		public int TemplateFillInstances()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillingInfo")]
	public partial class BillingInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClubID;
		
		private int _UserID;
		
		private System.Nullable<int> _CouponID;
		
		private long _ProfileID;
		
		private long _PaymentID;
		
		private byte _Status;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _MaskedCardNum;
		
		private System.Nullable<System.DateTime> _ExpirationDate;
		
		private decimal _Price;
		
		private int _IntervalDuration;
		
		private byte _IntervalType;
		
		private System.Nullable<int> _IntroPeriod;
		
		private decimal _IntroPrice;
		
		private byte _DiscountType;
		
		private System.Nullable<int> _DiscountDuration;
		
		private decimal _DiscountAmount;
		
		private System.Nullable<int> _TotalChargeCount;
		
		private System.Nullable<System.DateTime> _NextChargeDate;
		
		private decimal _NextChargeAmount;
		
		private decimal _PastDueAmount;
		
		private System.Nullable<System.DateTime> _PastDueSince;
		
		private byte _SuspendPolicyType;
		
		private System.Nullable<decimal> _UnbilledBalance;
		
		private int _BilledChargeCount;
		
		private EntityRef<Club> _Club;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCouponIDChanging(System.Nullable<int> value);
    partial void OnCouponIDChanged();
    partial void OnProfileIDChanging(long value);
    partial void OnProfileIDChanged();
    partial void OnPaymentIDChanging(long value);
    partial void OnPaymentIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnMaskedCardNumChanging(string value);
    partial void OnMaskedCardNumChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnIntervalDurationChanging(int value);
    partial void OnIntervalDurationChanged();
    partial void OnIntervalTypeChanging(byte value);
    partial void OnIntervalTypeChanged();
    partial void OnIntroPeriodChanging(System.Nullable<int> value);
    partial void OnIntroPeriodChanged();
    partial void OnIntroPriceChanging(decimal value);
    partial void OnIntroPriceChanged();
    partial void OnDiscountTypeChanging(byte value);
    partial void OnDiscountTypeChanged();
    partial void OnDiscountDurationChanging(System.Nullable<int> value);
    partial void OnDiscountDurationChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnTotalChargeCountChanging(System.Nullable<int> value);
    partial void OnTotalChargeCountChanged();
    partial void OnNextChargeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextChargeDateChanged();
    partial void OnNextChargeAmountChanging(decimal value);
    partial void OnNextChargeAmountChanged();
    partial void OnPastDueAmountChanging(decimal value);
    partial void OnPastDueAmountChanged();
    partial void OnPastDueSinceChanging(System.Nullable<System.DateTime> value);
    partial void OnPastDueSinceChanged();
    partial void OnSuspendPolicyTypeChanging(byte value);
    partial void OnSuspendPolicyTypeChanged();
    partial void OnUnbilledBalanceChanging(System.Nullable<decimal> value);
    partial void OnUnbilledBalanceChanged();
    partial void OnBilledChargeCountChanging(int value);
    partial void OnBilledChargeCountChanged();
    #endregion
		
		public BillingInfo()
		{
			this._Club = default(EntityRef<Club>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponID", DbType="Int")]
		public System.Nullable<int> CouponID
		{
			get
			{
				return this._CouponID;
			}
			set
			{
				if ((this._CouponID != value))
				{
					this.OnCouponIDChanging(value);
					this.SendPropertyChanging();
					this._CouponID = value;
					this.SendPropertyChanged("CouponID");
					this.OnCouponIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="BigInt NOT NULL")]
		public long ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="BigInt NOT NULL")]
		public long PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskedCardNum", DbType="VarChar(24)")]
		public string MaskedCardNum
		{
			get
			{
				return this._MaskedCardNum;
			}
			set
			{
				if ((this._MaskedCardNum != value))
				{
					this.OnMaskedCardNumChanging(value);
					this.SendPropertyChanging();
					this._MaskedCardNum = value;
					this.SendPropertyChanged("MaskedCardNum");
					this.OnMaskedCardNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalDuration", DbType="Int NOT NULL")]
		public int IntervalDuration
		{
			get
			{
				return this._IntervalDuration;
			}
			set
			{
				if ((this._IntervalDuration != value))
				{
					this.OnIntervalDurationChanging(value);
					this.SendPropertyChanging();
					this._IntervalDuration = value;
					this.SendPropertyChanged("IntervalDuration");
					this.OnIntervalDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalType", DbType="TinyInt NOT NULL")]
		public byte IntervalType
		{
			get
			{
				return this._IntervalType;
			}
			set
			{
				if ((this._IntervalType != value))
				{
					this.OnIntervalTypeChanging(value);
					this.SendPropertyChanging();
					this._IntervalType = value;
					this.SendPropertyChanged("IntervalType");
					this.OnIntervalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroPeriod", DbType="Int")]
		public System.Nullable<int> IntroPeriod
		{
			get
			{
				return this._IntroPeriod;
			}
			set
			{
				if ((this._IntroPeriod != value))
				{
					this.OnIntroPeriodChanging(value);
					this.SendPropertyChanging();
					this._IntroPeriod = value;
					this.SendPropertyChanged("IntroPeriod");
					this.OnIntroPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroPrice", DbType="Money NOT NULL")]
		public decimal IntroPrice
		{
			get
			{
				return this._IntroPrice;
			}
			set
			{
				if ((this._IntroPrice != value))
				{
					this.OnIntroPriceChanging(value);
					this.SendPropertyChanging();
					this._IntroPrice = value;
					this.SendPropertyChanged("IntroPrice");
					this.OnIntroPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountType", DbType="TinyInt NOT NULL")]
		public byte DiscountType
		{
			get
			{
				return this._DiscountType;
			}
			set
			{
				if ((this._DiscountType != value))
				{
					this.OnDiscountTypeChanging(value);
					this.SendPropertyChanging();
					this._DiscountType = value;
					this.SendPropertyChanged("DiscountType");
					this.OnDiscountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountDuration", DbType="Int")]
		public System.Nullable<int> DiscountDuration
		{
			get
			{
				return this._DiscountDuration;
			}
			set
			{
				if ((this._DiscountDuration != value))
				{
					this.OnDiscountDurationChanging(value);
					this.SendPropertyChanging();
					this._DiscountDuration = value;
					this.SendPropertyChanged("DiscountDuration");
					this.OnDiscountDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Money NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalChargeCount", DbType="Int")]
		public System.Nullable<int> TotalChargeCount
		{
			get
			{
				return this._TotalChargeCount;
			}
			set
			{
				if ((this._TotalChargeCount != value))
				{
					this.OnTotalChargeCountChanging(value);
					this.SendPropertyChanging();
					this._TotalChargeCount = value;
					this.SendPropertyChanged("TotalChargeCount");
					this.OnTotalChargeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextChargeDate", DbType="Date")]
		public System.Nullable<System.DateTime> NextChargeDate
		{
			get
			{
				return this._NextChargeDate;
			}
			set
			{
				if ((this._NextChargeDate != value))
				{
					this.OnNextChargeDateChanging(value);
					this.SendPropertyChanging();
					this._NextChargeDate = value;
					this.SendPropertyChanged("NextChargeDate");
					this.OnNextChargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextChargeAmount", DbType="Money NOT NULL")]
		public decimal NextChargeAmount
		{
			get
			{
				return this._NextChargeAmount;
			}
			set
			{
				if ((this._NextChargeAmount != value))
				{
					this.OnNextChargeAmountChanging(value);
					this.SendPropertyChanging();
					this._NextChargeAmount = value;
					this.SendPropertyChanged("NextChargeAmount");
					this.OnNextChargeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastDueAmount", DbType="Money NOT NULL")]
		public decimal PastDueAmount
		{
			get
			{
				return this._PastDueAmount;
			}
			set
			{
				if ((this._PastDueAmount != value))
				{
					this.OnPastDueAmountChanging(value);
					this.SendPropertyChanging();
					this._PastDueAmount = value;
					this.SendPropertyChanged("PastDueAmount");
					this.OnPastDueAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastDueSince", DbType="DateTime")]
		public System.Nullable<System.DateTime> PastDueSince
		{
			get
			{
				return this._PastDueSince;
			}
			set
			{
				if ((this._PastDueSince != value))
				{
					this.OnPastDueSinceChanging(value);
					this.SendPropertyChanging();
					this._PastDueSince = value;
					this.SendPropertyChanged("PastDueSince");
					this.OnPastDueSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuspendPolicyType", DbType="TinyInt NOT NULL")]
		public byte SuspendPolicyType
		{
			get
			{
				return this._SuspendPolicyType;
			}
			set
			{
				if ((this._SuspendPolicyType != value))
				{
					this.OnSuspendPolicyTypeChanging(value);
					this.SendPropertyChanging();
					this._SuspendPolicyType = value;
					this.SendPropertyChanged("SuspendPolicyType");
					this.OnSuspendPolicyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnbilledBalance", DbType="Money")]
		public System.Nullable<decimal> UnbilledBalance
		{
			get
			{
				return this._UnbilledBalance;
			}
			set
			{
				if ((this._UnbilledBalance != value))
				{
					this.OnUnbilledBalanceChanging(value);
					this.SendPropertyChanging();
					this._UnbilledBalance = value;
					this.SendPropertyChanged("UnbilledBalance");
					this.OnUnbilledBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BilledChargeCount", DbType="Int NOT NULL")]
		public int BilledChargeCount
		{
			get
			{
				return this._BilledChargeCount;
			}
			set
			{
				if ((this._BilledChargeCount != value))
				{
					this.OnBilledChargeCountChanging(value);
					this.SendPropertyChanging();
					this._BilledChargeCount = value;
					this.SendPropertyChanged("BilledChargeCount");
					this.OnBilledChargeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_BillingInfo", Storage="_Club", ThisKey="ClubID", OtherKey="ClubID", IsForeignKey=true)]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.BillingInfo = null;
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.BillingInfo = this;
						this._ClubID = value.ClubID;
					}
					else
					{
						this._ClubID = default(int);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YesNoAnswers")]
	public partial class YesNoAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private int _ClubID;
		
		private short _Year;
		
		private byte _Month;
		
		private bool _Answer;
		
		private EntityRef<Club> _Club;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnAnswerChanging(bool value);
    partial void OnAnswerChanged();
    #endregion
		
		public YesNoAnswer()
		{
			this._Club = default(EntityRef<Club>);
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="Bit NOT NULL")]
		public bool Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_YesNoAnswer", Storage="_Club", ThisKey="ClubID", OtherKey="ClubID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.YesNoAnswers.Remove(this);
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.YesNoAnswers.Add(this);
						this._ClubID = value.ClubID;
					}
					else
					{
						this._ClubID = default(int);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_YesNoAnswer", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.YesNoAnswers.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.YesNoAnswers.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calculations")]
	public partial class Calculation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CalcID;
		
		private short _Operator;
		
		private System.Nullable<int> _Q1;
		
		private System.Nullable<int> _Q2;
		
		private string _QuestionList;
		
		private bool _MaskYear;
		
		private bool _MaskMonth;
		
		private System.Nullable<double> _Constant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalcIDChanging(int value);
    partial void OnCalcIDChanged();
    partial void OnOperatorChanging(short value);
    partial void OnOperatorChanged();
    partial void OnQ1Changing(System.Nullable<int> value);
    partial void OnQ1Changed();
    partial void OnQ2Changing(System.Nullable<int> value);
    partial void OnQ2Changed();
    partial void OnQuestionListChanging(string value);
    partial void OnQuestionListChanged();
    partial void OnMaskYearChanging(bool value);
    partial void OnMaskYearChanged();
    partial void OnMaskMonthChanging(bool value);
    partial void OnMaskMonthChanged();
    partial void OnConstantChanging(System.Nullable<double> value);
    partial void OnConstantChanged();
    #endregion
		
		public Calculation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CalcID
		{
			get
			{
				return this._CalcID;
			}
			set
			{
				if ((this._CalcID != value))
				{
					this.OnCalcIDChanging(value);
					this.SendPropertyChanging();
					this._CalcID = value;
					this.SendPropertyChanged("CalcID");
					this.OnCalcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="SmallInt NOT NULL")]
		public short Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this.OnOperatorChanging(value);
					this.SendPropertyChanging();
					this._Operator = value;
					this.SendPropertyChanged("Operator");
					this.OnOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q1", DbType="Int")]
		public System.Nullable<int> Q1
		{
			get
			{
				return this._Q1;
			}
			set
			{
				if ((this._Q1 != value))
				{
					this.OnQ1Changing(value);
					this.SendPropertyChanging();
					this._Q1 = value;
					this.SendPropertyChanged("Q1");
					this.OnQ1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Q2", DbType="Int")]
		public System.Nullable<int> Q2
		{
			get
			{
				return this._Q2;
			}
			set
			{
				if ((this._Q2 != value))
				{
					this.OnQ2Changing(value);
					this.SendPropertyChanging();
					this._Q2 = value;
					this.SendPropertyChanged("Q2");
					this.OnQ2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionList", DbType="VarChar(MAX)")]
		public string QuestionList
		{
			get
			{
				return this._QuestionList;
			}
			set
			{
				if ((this._QuestionList != value))
				{
					this.OnQuestionListChanging(value);
					this.SendPropertyChanging();
					this._QuestionList = value;
					this.SendPropertyChanged("QuestionList");
					this.OnQuestionListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskYear", DbType="Bit NOT NULL")]
		public bool MaskYear
		{
			get
			{
				return this._MaskYear;
			}
			set
			{
				if ((this._MaskYear != value))
				{
					this.OnMaskYearChanging(value);
					this.SendPropertyChanging();
					this._MaskYear = value;
					this.SendPropertyChanged("MaskYear");
					this.OnMaskYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskMonth", DbType="Bit NOT NULL")]
		public bool MaskMonth
		{
			get
			{
				return this._MaskMonth;
			}
			set
			{
				if ((this._MaskMonth != value))
				{
					this.OnMaskMonthChanging(value);
					this.SendPropertyChanging();
					this._MaskMonth = value;
					this.SendPropertyChanged("MaskMonth");
					this.OnMaskMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Constant", DbType="Float")]
		public System.Nullable<double> Constant
		{
			get
			{
				return this._Constant;
			}
			set
			{
				if ((this._Constant != value))
				{
					this.OnConstantChanging(value);
					this.SendPropertyChanging();
					this._Constant = value;
					this.SendPropertyChanged("Constant");
					this.OnConstantChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClubExclusions")]
	public partial class ClubExclusion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Year;
		
		private int _ClubID;
		
		private EntityRef<Club> _Club;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    #endregion
		
		public ClubExclusion()
		{
			this._Club = default(EntityRef<Club>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_ClubExclusion", Storage="_Club", ThisKey="ClubID", OtherKey="ClubID", IsForeignKey=true)]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.ClubExclusions.Remove(this);
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.ClubExclusions.Add(this);
						this._ClubID = value.ClubID;
					}
					else
					{
						this._ClubID = default(int);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clubs")]
	public partial class Club : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClubID;
		
		private string _Name;
		
		private string _Address;
		
		private string _City;
		
		private int _StateID;
		
		private string _Zip;
		
		private string _Phone;
		
		private short _YearFounded;
		
		private bool _Limited;
		
		private int _ClubTypeID;
		
		private short _FiscalYearStart;
		
		private bool _CanCluster;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _Properties;
		
		private System.Nullable<int> _SkuID;
		
		private System.Nullable<System.DateTime> _SubscriptionStartDate;
		
		private string _StateName;
		
		private int _CountryID;
		
		private string _Address2;
		
		private System.Nullable<bool> _ExpirationMailSent;
		
		private System.Nullable<bool> _ExpiringMailSent;
		
		private bool _InCart;
		
		private EntityRef<BillingInfo> _BillingInfo;
		
		private EntitySet<YesNoAnswer> _YesNoAnswers;
		
		private EntitySet<ClubExclusion> _ClubExclusions;
		
		private EntitySet<MultipleChoiceAnswer> _MultipleChoiceAnswers;
		
		private EntitySet<NumericAnswer> _NumericAnswers;
		
		private EntityRef<SsoClub> _SsoClub;
		
		private EntitySet<TextAnswer> _TextAnswers;
		
		private EntitySet<User> _Users;
		
		private EntityRef<ClubType> _ClubType;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnYearFoundedChanging(short value);
    partial void OnYearFoundedChanged();
    partial void OnLimitedChanging(bool value);
    partial void OnLimitedChanged();
    partial void OnClubTypeIDChanging(int value);
    partial void OnClubTypeIDChanged();
    partial void OnFiscalYearStartChanging(short value);
    partial void OnFiscalYearStartChanged();
    partial void OnCanClusterChanging(bool value);
    partial void OnCanClusterChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnPropertiesChanging(string value);
    partial void OnPropertiesChanged();
    partial void OnSkuIDChanging(System.Nullable<int> value);
    partial void OnSkuIDChanged();
    partial void OnSubscriptionStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubscriptionStartDateChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnExpirationMailSentChanging(System.Nullable<bool> value);
    partial void OnExpirationMailSentChanged();
    partial void OnExpiringMailSentChanging(System.Nullable<bool> value);
    partial void OnExpiringMailSentChanged();
    partial void OnInCartChanging(bool value);
    partial void OnInCartChanged();
    #endregion
		
		public Club()
		{
			this._BillingInfo = default(EntityRef<BillingInfo>);
			this._YesNoAnswers = new EntitySet<YesNoAnswer>(new Action<YesNoAnswer>(this.attach_YesNoAnswers), new Action<YesNoAnswer>(this.detach_YesNoAnswers));
			this._ClubExclusions = new EntitySet<ClubExclusion>(new Action<ClubExclusion>(this.attach_ClubExclusions), new Action<ClubExclusion>(this.detach_ClubExclusions));
			this._MultipleChoiceAnswers = new EntitySet<MultipleChoiceAnswer>(new Action<MultipleChoiceAnswer>(this.attach_MultipleChoiceAnswers), new Action<MultipleChoiceAnswer>(this.detach_MultipleChoiceAnswers));
			this._NumericAnswers = new EntitySet<NumericAnswer>(new Action<NumericAnswer>(this.attach_NumericAnswers), new Action<NumericAnswer>(this.detach_NumericAnswers));
			this._SsoClub = default(EntityRef<SsoClub>);
			this._TextAnswers = new EntitySet<TextAnswer>(new Action<TextAnswer>(this.attach_TextAnswers), new Action<TextAnswer>(this.detach_TextAnswers));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._ClubType = default(EntityRef<ClubType>);
			this._Country = default(EntityRef<Country>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearFounded", DbType="SmallInt NOT NULL")]
		public short YearFounded
		{
			get
			{
				return this._YearFounded;
			}
			set
			{
				if ((this._YearFounded != value))
				{
					this.OnYearFoundedChanging(value);
					this.SendPropertyChanging();
					this._YearFounded = value;
					this.SendPropertyChanged("YearFounded");
					this.OnYearFoundedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limited", DbType="Bit NOT NULL")]
		public bool Limited
		{
			get
			{
				return this._Limited;
			}
			set
			{
				if ((this._Limited != value))
				{
					this.OnLimitedChanging(value);
					this.SendPropertyChanging();
					this._Limited = value;
					this.SendPropertyChanged("Limited");
					this.OnLimitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubTypeID", DbType="Int NOT NULL")]
		public int ClubTypeID
		{
			get
			{
				return this._ClubTypeID;
			}
			set
			{
				if ((this._ClubTypeID != value))
				{
					if (this._ClubType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ClubTypeID = value;
					this.SendPropertyChanged("ClubTypeID");
					this.OnClubTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalYearStart", DbType="SmallInt NOT NULL")]
		public short FiscalYearStart
		{
			get
			{
				return this._FiscalYearStart;
			}
			set
			{
				if ((this._FiscalYearStart != value))
				{
					this.OnFiscalYearStartChanging(value);
					this.SendPropertyChanging();
					this._FiscalYearStart = value;
					this.SendPropertyChanged("FiscalYearStart");
					this.OnFiscalYearStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCluster", DbType="Bit NOT NULL")]
		public bool CanCluster
		{
			get
			{
				return this._CanCluster;
			}
			set
			{
				if ((this._CanCluster != value))
				{
					this.OnCanClusterChanging(value);
					this.SendPropertyChanging();
					this._CanCluster = value;
					this.SendPropertyChanged("CanCluster");
					this.OnCanClusterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Properties", DbType="VarChar(MAX)")]
		public string Properties
		{
			get
			{
				return this._Properties;
			}
			set
			{
				if ((this._Properties != value))
				{
					this.OnPropertiesChanging(value);
					this.SendPropertyChanging();
					this._Properties = value;
					this.SendPropertyChanged("Properties");
					this.OnPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkuID", DbType="Int")]
		public System.Nullable<int> SkuID
		{
			get
			{
				return this._SkuID;
			}
			set
			{
				if ((this._SkuID != value))
				{
					this.OnSkuIDChanging(value);
					this.SendPropertyChanging();
					this._SkuID = value;
					this.SendPropertyChanged("SkuID");
					this.OnSkuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubscriptionStartDate
		{
			get
			{
				return this._SubscriptionStartDate;
			}
			set
			{
				if ((this._SubscriptionStartDate != value))
				{
					this.OnSubscriptionStartDateChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionStartDate = value;
					this.SendPropertyChanged("SubscriptionStartDate");
					this.OnSubscriptionStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(256)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationMailSent", DbType="Bit")]
		public System.Nullable<bool> ExpirationMailSent
		{
			get
			{
				return this._ExpirationMailSent;
			}
			set
			{
				if ((this._ExpirationMailSent != value))
				{
					this.OnExpirationMailSentChanging(value);
					this.SendPropertyChanging();
					this._ExpirationMailSent = value;
					this.SendPropertyChanged("ExpirationMailSent");
					this.OnExpirationMailSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiringMailSent", DbType="Bit")]
		public System.Nullable<bool> ExpiringMailSent
		{
			get
			{
				return this._ExpiringMailSent;
			}
			set
			{
				if ((this._ExpiringMailSent != value))
				{
					this.OnExpiringMailSentChanging(value);
					this.SendPropertyChanging();
					this._ExpiringMailSent = value;
					this.SendPropertyChanged("ExpiringMailSent");
					this.OnExpiringMailSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCart", DbType="Bit NOT NULL")]
		public bool InCart
		{
			get
			{
				return this._InCart;
			}
			set
			{
				if ((this._InCart != value))
				{
					this.OnInCartChanging(value);
					this.SendPropertyChanging();
					this._InCart = value;
					this.SendPropertyChanged("InCart");
					this.OnInCartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_BillingInfo", Storage="_BillingInfo", ThisKey="ClubID", OtherKey="ClubID", IsUnique=true, IsForeignKey=false)]
		public BillingInfo BillingInfo
		{
			get
			{
				return this._BillingInfo.Entity;
			}
			set
			{
				BillingInfo previousValue = this._BillingInfo.Entity;
				if (((previousValue != value) 
							|| (this._BillingInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingInfo.Entity = null;
						previousValue.Club = null;
					}
					this._BillingInfo.Entity = value;
					if ((value != null))
					{
						value.Club = this;
					}
					this.SendPropertyChanged("BillingInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_YesNoAnswer", Storage="_YesNoAnswers", ThisKey="ClubID", OtherKey="ClubID")]
		public EntitySet<YesNoAnswer> YesNoAnswers
		{
			get
			{
				return this._YesNoAnswers;
			}
			set
			{
				this._YesNoAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_ClubExclusion", Storage="_ClubExclusions", ThisKey="ClubID", OtherKey="ClubID")]
		public EntitySet<ClubExclusion> ClubExclusions
		{
			get
			{
				return this._ClubExclusions;
			}
			set
			{
				this._ClubExclusions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_MultipleChoiceAnswer", Storage="_MultipleChoiceAnswers", ThisKey="ClubID", OtherKey="ClubID")]
		public EntitySet<MultipleChoiceAnswer> MultipleChoiceAnswers
		{
			get
			{
				return this._MultipleChoiceAnswers;
			}
			set
			{
				this._MultipleChoiceAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_NumericAnswer", Storage="_NumericAnswers", ThisKey="ClubID", OtherKey="ClubID")]
		public EntitySet<NumericAnswer> NumericAnswers
		{
			get
			{
				return this._NumericAnswers;
			}
			set
			{
				this._NumericAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_SsoClub", Storage="_SsoClub", ThisKey="ClubID", OtherKey="ClubID", IsUnique=true, IsForeignKey=false)]
		public SsoClub SsoClub
		{
			get
			{
				return this._SsoClub.Entity;
			}
			set
			{
				SsoClub previousValue = this._SsoClub.Entity;
				if (((previousValue != value) 
							|| (this._SsoClub.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SsoClub.Entity = null;
						previousValue.Club = null;
					}
					this._SsoClub.Entity = value;
					if ((value != null))
					{
						value.Club = this;
					}
					this.SendPropertyChanged("SsoClub");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_TextAnswer", Storage="_TextAnswers", ThisKey="ClubID", OtherKey="ClubID")]
		public EntitySet<TextAnswer> TextAnswers
		{
			get
			{
				return this._TextAnswers;
			}
			set
			{
				this._TextAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_User", Storage="_Users", ThisKey="ClubID", OtherKey="ClubID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClubType_Club", Storage="_ClubType", ThisKey="ClubTypeID", OtherKey="ID", IsForeignKey=true)]
		public ClubType ClubType
		{
			get
			{
				return this._ClubType.Entity;
			}
			set
			{
				ClubType previousValue = this._ClubType.Entity;
				if (((previousValue != value) 
							|| (this._ClubType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClubType.Entity = null;
						previousValue.Clubs.Remove(this);
					}
					this._ClubType.Entity = value;
					if ((value != null))
					{
						value.Clubs.Add(this);
						this._ClubTypeID = value.ID;
					}
					else
					{
						this._ClubTypeID = default(int);
					}
					this.SendPropertyChanged("ClubType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Club", Storage="_Country", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Clubs.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Clubs.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Club", Storage="_State", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Clubs.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Clubs.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_YesNoAnswers(YesNoAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Club = this;
		}
		
		private void detach_YesNoAnswers(YesNoAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Club = null;
		}
		
		private void attach_ClubExclusions(ClubExclusion entity)
		{
			this.SendPropertyChanging();
			entity.Club = this;
		}
		
		private void detach_ClubExclusions(ClubExclusion entity)
		{
			this.SendPropertyChanging();
			entity.Club = null;
		}
		
		private void attach_MultipleChoiceAnswers(MultipleChoiceAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Club = this;
		}
		
		private void detach_MultipleChoiceAnswers(MultipleChoiceAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Club = null;
		}
		
		private void attach_NumericAnswers(NumericAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Club = this;
		}
		
		private void detach_NumericAnswers(NumericAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Club = null;
		}
		
		private void attach_TextAnswers(TextAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Club = this;
		}
		
		private void detach_TextAnswers(TextAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Club = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Club = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Club = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClubTypes")]
	public partial class ClubType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _TypeSingular;
		
		private string _TypePlural;
		
		private System.Nullable<int> _PositionA1;
		
		private string _FilterA1;
		
		private System.Nullable<int> _PositionA2;
		
		private string _FilterA2;
		
		private System.Nullable<int> _PositionA3;
		
		private string _FilterA3;
		
		private System.Nullable<int> _PositionA4;
		
		private string _FilterA4;
		
		private System.Nullable<int> _PositionA5;
		
		private string _FilterA5;
		
		private System.Nullable<int> _PositionB1;
		
		private string _FilterB1;
		
		private System.Nullable<int> _PositionB2;
		
		private string _FilterB2;
		
		private System.Nullable<int> _PositionB3;
		
		private string _FilterB3;
		
		private System.Nullable<int> _PositionB4;
		
		private string _FilterB4;
		
		private System.Nullable<int> _PositionB5;
		
		private string _FilterB5;
		
		private string _MyDataTab;
		
		private string _CompareDataTab;
		
		private string _ReportTab;
		
		private string _MyDataHeader;
		
		private string _CompareDataHeader;
		
		private string _ReportHeader;
		
		private string _FilterReports;
		
		private System.Nullable<bool> _IsClubTypeA1;
		
		private System.Nullable<bool> _IsClubTypeA2;
		
		private System.Nullable<bool> _IsClubTypeA3;
		
		private System.Nullable<bool> _IsClubTypeA4;
		
		private System.Nullable<bool> _IsClubTypeA5;
		
		private System.Nullable<bool> _IsClubTypeB1;
		
		private System.Nullable<bool> _IsClubTypeB2;
		
		private System.Nullable<bool> _IsClubTypeB3;
		
		private System.Nullable<bool> _IsClubTypeB4;
		
		private System.Nullable<bool> _IsClubTypeB5;
		
		private string _ImageUrl;
		
		private bool _IsSalary;
		
		private bool _IsWriteOnly;
		
		private string _WriteOnlyMessage;
		
		private string _DescrA1;
		
		private string _DescrA2;
		
		private string _DescrA3;
		
		private string _DescrA4;
		
		private string _DescrA5;
		
		private string _DescrB1;
		
		private string _DescrB2;
		
		private string _DescrB3;
		
		private string _DescrB4;
		
		private string _DescrB5;
		
		private System.Nullable<bool> _ShowProgressBar;
		
		private System.Nullable<bool> _ShowProgressGraph;
		
		private System.Nullable<bool> _ShowProgressText;
		
		private System.Nullable<int> _PositionA6;
		
		private string _FilterA6;
		
		private System.Nullable<int> _PositionB6;
		
		private string _FilterB6;
		
		private System.Nullable<bool> _IsClubTypeA6;
		
		private System.Nullable<bool> _IsClubTypeB6;
		
		private string _DescrA6;
		
		private string _DescrB6;
		
		private bool _IsReadOnly;
		
		private string _HomeLink;
		
		private string _StaticReportTab;
		
		private string _StaticReportHeader;
		
		private byte _MyDataTabOrder;
		
		private byte _CompareDataTabOrder;
		
		private byte _StaticReportTabOrder;
		
		private byte _ReportTabOrder;
		
		private byte _ReportTabDisplayStyle;
		
		private string _ReportTileHeader;
		
		private EntitySet<Club> _Clubs;
		
		private EntitySet<Filter> _Filters;
		
		private EntitySet<Skus> _Skus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeSingularChanging(string value);
    partial void OnTypeSingularChanged();
    partial void OnTypePluralChanging(string value);
    partial void OnTypePluralChanged();
    partial void OnPositionA1Changing(System.Nullable<int> value);
    partial void OnPositionA1Changed();
    partial void OnFilterA1Changing(string value);
    partial void OnFilterA1Changed();
    partial void OnPositionA2Changing(System.Nullable<int> value);
    partial void OnPositionA2Changed();
    partial void OnFilterA2Changing(string value);
    partial void OnFilterA2Changed();
    partial void OnPositionA3Changing(System.Nullable<int> value);
    partial void OnPositionA3Changed();
    partial void OnFilterA3Changing(string value);
    partial void OnFilterA3Changed();
    partial void OnPositionA4Changing(System.Nullable<int> value);
    partial void OnPositionA4Changed();
    partial void OnFilterA4Changing(string value);
    partial void OnFilterA4Changed();
    partial void OnPositionA5Changing(System.Nullable<int> value);
    partial void OnPositionA5Changed();
    partial void OnFilterA5Changing(string value);
    partial void OnFilterA5Changed();
    partial void OnPositionB1Changing(System.Nullable<int> value);
    partial void OnPositionB1Changed();
    partial void OnFilterB1Changing(string value);
    partial void OnFilterB1Changed();
    partial void OnPositionB2Changing(System.Nullable<int> value);
    partial void OnPositionB2Changed();
    partial void OnFilterB2Changing(string value);
    partial void OnFilterB2Changed();
    partial void OnPositionB3Changing(System.Nullable<int> value);
    partial void OnPositionB3Changed();
    partial void OnFilterB3Changing(string value);
    partial void OnFilterB3Changed();
    partial void OnPositionB4Changing(System.Nullable<int> value);
    partial void OnPositionB4Changed();
    partial void OnFilterB4Changing(string value);
    partial void OnFilterB4Changed();
    partial void OnPositionB5Changing(System.Nullable<int> value);
    partial void OnPositionB5Changed();
    partial void OnFilterB5Changing(string value);
    partial void OnFilterB5Changed();
    partial void OnMyDataTabChanging(string value);
    partial void OnMyDataTabChanged();
    partial void OnCompareDataTabChanging(string value);
    partial void OnCompareDataTabChanged();
    partial void OnReportTabChanging(string value);
    partial void OnReportTabChanged();
    partial void OnMyDataHeaderChanging(string value);
    partial void OnMyDataHeaderChanged();
    partial void OnCompareDataHeaderChanging(string value);
    partial void OnCompareDataHeaderChanged();
    partial void OnReportHeaderChanging(string value);
    partial void OnReportHeaderChanged();
    partial void OnFilterReportsChanging(string value);
    partial void OnFilterReportsChanged();
    partial void OnIsClubTypeA1Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeA1Changed();
    partial void OnIsClubTypeA2Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeA2Changed();
    partial void OnIsClubTypeA3Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeA3Changed();
    partial void OnIsClubTypeA4Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeA4Changed();
    partial void OnIsClubTypeA5Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeA5Changed();
    partial void OnIsClubTypeB1Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeB1Changed();
    partial void OnIsClubTypeB2Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeB2Changed();
    partial void OnIsClubTypeB3Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeB3Changed();
    partial void OnIsClubTypeB4Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeB4Changed();
    partial void OnIsClubTypeB5Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeB5Changed();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnIsSalaryChanging(bool value);
    partial void OnIsSalaryChanged();
    partial void OnIsWriteOnlyChanging(bool value);
    partial void OnIsWriteOnlyChanged();
    partial void OnWriteOnlyMessageChanging(string value);
    partial void OnWriteOnlyMessageChanged();
    partial void OnDescrA1Changing(string value);
    partial void OnDescrA1Changed();
    partial void OnDescrA2Changing(string value);
    partial void OnDescrA2Changed();
    partial void OnDescrA3Changing(string value);
    partial void OnDescrA3Changed();
    partial void OnDescrA4Changing(string value);
    partial void OnDescrA4Changed();
    partial void OnDescrA5Changing(string value);
    partial void OnDescrA5Changed();
    partial void OnDescrB1Changing(string value);
    partial void OnDescrB1Changed();
    partial void OnDescrB2Changing(string value);
    partial void OnDescrB2Changed();
    partial void OnDescrB3Changing(string value);
    partial void OnDescrB3Changed();
    partial void OnDescrB4Changing(string value);
    partial void OnDescrB4Changed();
    partial void OnDescrB5Changing(string value);
    partial void OnDescrB5Changed();
    partial void OnShowProgressBarChanging(System.Nullable<bool> value);
    partial void OnShowProgressBarChanged();
    partial void OnShowProgressGraphChanging(System.Nullable<bool> value);
    partial void OnShowProgressGraphChanged();
    partial void OnShowProgressTextChanging(System.Nullable<bool> value);
    partial void OnShowProgressTextChanged();
    partial void OnPositionA6Changing(System.Nullable<int> value);
    partial void OnPositionA6Changed();
    partial void OnFilterA6Changing(string value);
    partial void OnFilterA6Changed();
    partial void OnPositionB6Changing(System.Nullable<int> value);
    partial void OnPositionB6Changed();
    partial void OnFilterB6Changing(string value);
    partial void OnFilterB6Changed();
    partial void OnIsClubTypeA6Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeA6Changed();
    partial void OnIsClubTypeB6Changing(System.Nullable<bool> value);
    partial void OnIsClubTypeB6Changed();
    partial void OnDescrA6Changing(string value);
    partial void OnDescrA6Changed();
    partial void OnDescrB6Changing(string value);
    partial void OnDescrB6Changed();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    partial void OnHomeLinkChanging(string value);
    partial void OnHomeLinkChanged();
    partial void OnStaticReportTabChanging(string value);
    partial void OnStaticReportTabChanged();
    partial void OnStaticReportHeaderChanging(string value);
    partial void OnStaticReportHeaderChanged();
    partial void OnMyDataTabOrderChanging(byte value);
    partial void OnMyDataTabOrderChanged();
    partial void OnCompareDataTabOrderChanging(byte value);
    partial void OnCompareDataTabOrderChanged();
    partial void OnStaticReportTabOrderChanging(byte value);
    partial void OnStaticReportTabOrderChanged();
    partial void OnReportTabOrderChanging(byte value);
    partial void OnReportTabOrderChanged();
    partial void OnReportTabDisplayStyleChanging(byte value);
    partial void OnReportTabDisplayStyleChanged();
    partial void OnReportTileHeaderChanging(string value);
    partial void OnReportTileHeaderChanged();
    #endregion
		
		public ClubType()
		{
			this._Clubs = new EntitySet<Club>(new Action<Club>(this.attach_Clubs), new Action<Club>(this.detach_Clubs));
			this._Filters = new EntitySet<Filter>(new Action<Filter>(this.attach_Filters), new Action<Filter>(this.detach_Filters));
			this._Skus = new EntitySet<Skus>(new Action<Skus>(this.attach_Skus), new Action<Skus>(this.detach_Skus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeSingular", DbType="VarChar(100)")]
		public string TypeSingular
		{
			get
			{
				return this._TypeSingular;
			}
			set
			{
				if ((this._TypeSingular != value))
				{
					this.OnTypeSingularChanging(value);
					this.SendPropertyChanging();
					this._TypeSingular = value;
					this.SendPropertyChanged("TypeSingular");
					this.OnTypeSingularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypePlural", DbType="VarChar(100)")]
		public string TypePlural
		{
			get
			{
				return this._TypePlural;
			}
			set
			{
				if ((this._TypePlural != value))
				{
					this.OnTypePluralChanging(value);
					this.SendPropertyChanging();
					this._TypePlural = value;
					this.SendPropertyChanged("TypePlural");
					this.OnTypePluralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionA1", DbType="Int")]
		public System.Nullable<int> PositionA1
		{
			get
			{
				return this._PositionA1;
			}
			set
			{
				if ((this._PositionA1 != value))
				{
					this.OnPositionA1Changing(value);
					this.SendPropertyChanging();
					this._PositionA1 = value;
					this.SendPropertyChanged("PositionA1");
					this.OnPositionA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterA1", DbType="VarChar(100)")]
		public string FilterA1
		{
			get
			{
				return this._FilterA1;
			}
			set
			{
				if ((this._FilterA1 != value))
				{
					this.OnFilterA1Changing(value);
					this.SendPropertyChanging();
					this._FilterA1 = value;
					this.SendPropertyChanged("FilterA1");
					this.OnFilterA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionA2", DbType="Int")]
		public System.Nullable<int> PositionA2
		{
			get
			{
				return this._PositionA2;
			}
			set
			{
				if ((this._PositionA2 != value))
				{
					this.OnPositionA2Changing(value);
					this.SendPropertyChanging();
					this._PositionA2 = value;
					this.SendPropertyChanged("PositionA2");
					this.OnPositionA2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterA2", DbType="VarChar(100)")]
		public string FilterA2
		{
			get
			{
				return this._FilterA2;
			}
			set
			{
				if ((this._FilterA2 != value))
				{
					this.OnFilterA2Changing(value);
					this.SendPropertyChanging();
					this._FilterA2 = value;
					this.SendPropertyChanged("FilterA2");
					this.OnFilterA2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionA3", DbType="Int")]
		public System.Nullable<int> PositionA3
		{
			get
			{
				return this._PositionA3;
			}
			set
			{
				if ((this._PositionA3 != value))
				{
					this.OnPositionA3Changing(value);
					this.SendPropertyChanging();
					this._PositionA3 = value;
					this.SendPropertyChanged("PositionA3");
					this.OnPositionA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterA3", DbType="VarChar(100)")]
		public string FilterA3
		{
			get
			{
				return this._FilterA3;
			}
			set
			{
				if ((this._FilterA3 != value))
				{
					this.OnFilterA3Changing(value);
					this.SendPropertyChanging();
					this._FilterA3 = value;
					this.SendPropertyChanged("FilterA3");
					this.OnFilterA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionA4", DbType="Int")]
		public System.Nullable<int> PositionA4
		{
			get
			{
				return this._PositionA4;
			}
			set
			{
				if ((this._PositionA4 != value))
				{
					this.OnPositionA4Changing(value);
					this.SendPropertyChanging();
					this._PositionA4 = value;
					this.SendPropertyChanged("PositionA4");
					this.OnPositionA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterA4", DbType="VarChar(100)")]
		public string FilterA4
		{
			get
			{
				return this._FilterA4;
			}
			set
			{
				if ((this._FilterA4 != value))
				{
					this.OnFilterA4Changing(value);
					this.SendPropertyChanging();
					this._FilterA4 = value;
					this.SendPropertyChanged("FilterA4");
					this.OnFilterA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionA5", DbType="Int")]
		public System.Nullable<int> PositionA5
		{
			get
			{
				return this._PositionA5;
			}
			set
			{
				if ((this._PositionA5 != value))
				{
					this.OnPositionA5Changing(value);
					this.SendPropertyChanging();
					this._PositionA5 = value;
					this.SendPropertyChanged("PositionA5");
					this.OnPositionA5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterA5", DbType="VarChar(100)")]
		public string FilterA5
		{
			get
			{
				return this._FilterA5;
			}
			set
			{
				if ((this._FilterA5 != value))
				{
					this.OnFilterA5Changing(value);
					this.SendPropertyChanging();
					this._FilterA5 = value;
					this.SendPropertyChanged("FilterA5");
					this.OnFilterA5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionB1", DbType="Int")]
		public System.Nullable<int> PositionB1
		{
			get
			{
				return this._PositionB1;
			}
			set
			{
				if ((this._PositionB1 != value))
				{
					this.OnPositionB1Changing(value);
					this.SendPropertyChanging();
					this._PositionB1 = value;
					this.SendPropertyChanged("PositionB1");
					this.OnPositionB1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterB1", DbType="VarChar(100)")]
		public string FilterB1
		{
			get
			{
				return this._FilterB1;
			}
			set
			{
				if ((this._FilterB1 != value))
				{
					this.OnFilterB1Changing(value);
					this.SendPropertyChanging();
					this._FilterB1 = value;
					this.SendPropertyChanged("FilterB1");
					this.OnFilterB1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionB2", DbType="Int")]
		public System.Nullable<int> PositionB2
		{
			get
			{
				return this._PositionB2;
			}
			set
			{
				if ((this._PositionB2 != value))
				{
					this.OnPositionB2Changing(value);
					this.SendPropertyChanging();
					this._PositionB2 = value;
					this.SendPropertyChanged("PositionB2");
					this.OnPositionB2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterB2", DbType="VarChar(100)")]
		public string FilterB2
		{
			get
			{
				return this._FilterB2;
			}
			set
			{
				if ((this._FilterB2 != value))
				{
					this.OnFilterB2Changing(value);
					this.SendPropertyChanging();
					this._FilterB2 = value;
					this.SendPropertyChanged("FilterB2");
					this.OnFilterB2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionB3", DbType="Int")]
		public System.Nullable<int> PositionB3
		{
			get
			{
				return this._PositionB3;
			}
			set
			{
				if ((this._PositionB3 != value))
				{
					this.OnPositionB3Changing(value);
					this.SendPropertyChanging();
					this._PositionB3 = value;
					this.SendPropertyChanged("PositionB3");
					this.OnPositionB3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterB3", DbType="VarChar(100)")]
		public string FilterB3
		{
			get
			{
				return this._FilterB3;
			}
			set
			{
				if ((this._FilterB3 != value))
				{
					this.OnFilterB3Changing(value);
					this.SendPropertyChanging();
					this._FilterB3 = value;
					this.SendPropertyChanged("FilterB3");
					this.OnFilterB3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionB4", DbType="Int")]
		public System.Nullable<int> PositionB4
		{
			get
			{
				return this._PositionB4;
			}
			set
			{
				if ((this._PositionB4 != value))
				{
					this.OnPositionB4Changing(value);
					this.SendPropertyChanging();
					this._PositionB4 = value;
					this.SendPropertyChanged("PositionB4");
					this.OnPositionB4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterB4", DbType="VarChar(100)")]
		public string FilterB4
		{
			get
			{
				return this._FilterB4;
			}
			set
			{
				if ((this._FilterB4 != value))
				{
					this.OnFilterB4Changing(value);
					this.SendPropertyChanging();
					this._FilterB4 = value;
					this.SendPropertyChanged("FilterB4");
					this.OnFilterB4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionB5", DbType="Int")]
		public System.Nullable<int> PositionB5
		{
			get
			{
				return this._PositionB5;
			}
			set
			{
				if ((this._PositionB5 != value))
				{
					this.OnPositionB5Changing(value);
					this.SendPropertyChanging();
					this._PositionB5 = value;
					this.SendPropertyChanged("PositionB5");
					this.OnPositionB5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterB5", DbType="VarChar(100)")]
		public string FilterB5
		{
			get
			{
				return this._FilterB5;
			}
			set
			{
				if ((this._FilterB5 != value))
				{
					this.OnFilterB5Changing(value);
					this.SendPropertyChanging();
					this._FilterB5 = value;
					this.SendPropertyChanged("FilterB5");
					this.OnFilterB5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyDataTab", DbType="VarChar(500)")]
		public string MyDataTab
		{
			get
			{
				return this._MyDataTab;
			}
			set
			{
				if ((this._MyDataTab != value))
				{
					this.OnMyDataTabChanging(value);
					this.SendPropertyChanging();
					this._MyDataTab = value;
					this.SendPropertyChanged("MyDataTab");
					this.OnMyDataTabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareDataTab", DbType="VarChar(500)")]
		public string CompareDataTab
		{
			get
			{
				return this._CompareDataTab;
			}
			set
			{
				if ((this._CompareDataTab != value))
				{
					this.OnCompareDataTabChanging(value);
					this.SendPropertyChanging();
					this._CompareDataTab = value;
					this.SendPropertyChanged("CompareDataTab");
					this.OnCompareDataTabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTab", DbType="VarChar(500)")]
		public string ReportTab
		{
			get
			{
				return this._ReportTab;
			}
			set
			{
				if ((this._ReportTab != value))
				{
					this.OnReportTabChanging(value);
					this.SendPropertyChanging();
					this._ReportTab = value;
					this.SendPropertyChanged("ReportTab");
					this.OnReportTabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyDataHeader", DbType="VarChar(MAX)")]
		public string MyDataHeader
		{
			get
			{
				return this._MyDataHeader;
			}
			set
			{
				if ((this._MyDataHeader != value))
				{
					this.OnMyDataHeaderChanging(value);
					this.SendPropertyChanging();
					this._MyDataHeader = value;
					this.SendPropertyChanged("MyDataHeader");
					this.OnMyDataHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareDataHeader", DbType="VarChar(MAX)")]
		public string CompareDataHeader
		{
			get
			{
				return this._CompareDataHeader;
			}
			set
			{
				if ((this._CompareDataHeader != value))
				{
					this.OnCompareDataHeaderChanging(value);
					this.SendPropertyChanging();
					this._CompareDataHeader = value;
					this.SendPropertyChanged("CompareDataHeader");
					this.OnCompareDataHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportHeader", DbType="VarChar(MAX)")]
		public string ReportHeader
		{
			get
			{
				return this._ReportHeader;
			}
			set
			{
				if ((this._ReportHeader != value))
				{
					this.OnReportHeaderChanging(value);
					this.SendPropertyChanging();
					this._ReportHeader = value;
					this.SendPropertyChanged("ReportHeader");
					this.OnReportHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterReports", DbType="VarChar(512)")]
		public string FilterReports
		{
			get
			{
				return this._FilterReports;
			}
			set
			{
				if ((this._FilterReports != value))
				{
					this.OnFilterReportsChanging(value);
					this.SendPropertyChanging();
					this._FilterReports = value;
					this.SendPropertyChanged("FilterReports");
					this.OnFilterReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeA1", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeA1
		{
			get
			{
				return this._IsClubTypeA1;
			}
			set
			{
				if ((this._IsClubTypeA1 != value))
				{
					this.OnIsClubTypeA1Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeA1 = value;
					this.SendPropertyChanged("IsClubTypeA1");
					this.OnIsClubTypeA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeA2", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeA2
		{
			get
			{
				return this._IsClubTypeA2;
			}
			set
			{
				if ((this._IsClubTypeA2 != value))
				{
					this.OnIsClubTypeA2Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeA2 = value;
					this.SendPropertyChanged("IsClubTypeA2");
					this.OnIsClubTypeA2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeA3", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeA3
		{
			get
			{
				return this._IsClubTypeA3;
			}
			set
			{
				if ((this._IsClubTypeA3 != value))
				{
					this.OnIsClubTypeA3Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeA3 = value;
					this.SendPropertyChanged("IsClubTypeA3");
					this.OnIsClubTypeA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeA4", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeA4
		{
			get
			{
				return this._IsClubTypeA4;
			}
			set
			{
				if ((this._IsClubTypeA4 != value))
				{
					this.OnIsClubTypeA4Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeA4 = value;
					this.SendPropertyChanged("IsClubTypeA4");
					this.OnIsClubTypeA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeA5", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeA5
		{
			get
			{
				return this._IsClubTypeA5;
			}
			set
			{
				if ((this._IsClubTypeA5 != value))
				{
					this.OnIsClubTypeA5Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeA5 = value;
					this.SendPropertyChanged("IsClubTypeA5");
					this.OnIsClubTypeA5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeB1", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeB1
		{
			get
			{
				return this._IsClubTypeB1;
			}
			set
			{
				if ((this._IsClubTypeB1 != value))
				{
					this.OnIsClubTypeB1Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeB1 = value;
					this.SendPropertyChanged("IsClubTypeB1");
					this.OnIsClubTypeB1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeB2", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeB2
		{
			get
			{
				return this._IsClubTypeB2;
			}
			set
			{
				if ((this._IsClubTypeB2 != value))
				{
					this.OnIsClubTypeB2Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeB2 = value;
					this.SendPropertyChanged("IsClubTypeB2");
					this.OnIsClubTypeB2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeB3", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeB3
		{
			get
			{
				return this._IsClubTypeB3;
			}
			set
			{
				if ((this._IsClubTypeB3 != value))
				{
					this.OnIsClubTypeB3Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeB3 = value;
					this.SendPropertyChanged("IsClubTypeB3");
					this.OnIsClubTypeB3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeB4", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeB4
		{
			get
			{
				return this._IsClubTypeB4;
			}
			set
			{
				if ((this._IsClubTypeB4 != value))
				{
					this.OnIsClubTypeB4Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeB4 = value;
					this.SendPropertyChanged("IsClubTypeB4");
					this.OnIsClubTypeB4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeB5", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeB5
		{
			get
			{
				return this._IsClubTypeB5;
			}
			set
			{
				if ((this._IsClubTypeB5 != value))
				{
					this.OnIsClubTypeB5Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeB5 = value;
					this.SendPropertyChanged("IsClubTypeB5");
					this.OnIsClubTypeB5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="VarChar(256)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSalary", DbType="Bit NOT NULL")]
		public bool IsSalary
		{
			get
			{
				return this._IsSalary;
			}
			set
			{
				if ((this._IsSalary != value))
				{
					this.OnIsSalaryChanging(value);
					this.SendPropertyChanging();
					this._IsSalary = value;
					this.SendPropertyChanged("IsSalary");
					this.OnIsSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWriteOnly", DbType="Bit NOT NULL")]
		public bool IsWriteOnly
		{
			get
			{
				return this._IsWriteOnly;
			}
			set
			{
				if ((this._IsWriteOnly != value))
				{
					this.OnIsWriteOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsWriteOnly = value;
					this.SendPropertyChanged("IsWriteOnly");
					this.OnIsWriteOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WriteOnlyMessage", DbType="VarChar(1024)")]
		public string WriteOnlyMessage
		{
			get
			{
				return this._WriteOnlyMessage;
			}
			set
			{
				if ((this._WriteOnlyMessage != value))
				{
					this.OnWriteOnlyMessageChanging(value);
					this.SendPropertyChanging();
					this._WriteOnlyMessage = value;
					this.SendPropertyChanged("WriteOnlyMessage");
					this.OnWriteOnlyMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrA1", DbType="VarChar(512)")]
		public string DescrA1
		{
			get
			{
				return this._DescrA1;
			}
			set
			{
				if ((this._DescrA1 != value))
				{
					this.OnDescrA1Changing(value);
					this.SendPropertyChanging();
					this._DescrA1 = value;
					this.SendPropertyChanged("DescrA1");
					this.OnDescrA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrA2", DbType="VarChar(512)")]
		public string DescrA2
		{
			get
			{
				return this._DescrA2;
			}
			set
			{
				if ((this._DescrA2 != value))
				{
					this.OnDescrA2Changing(value);
					this.SendPropertyChanging();
					this._DescrA2 = value;
					this.SendPropertyChanged("DescrA2");
					this.OnDescrA2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrA3", DbType="VarChar(512)")]
		public string DescrA3
		{
			get
			{
				return this._DescrA3;
			}
			set
			{
				if ((this._DescrA3 != value))
				{
					this.OnDescrA3Changing(value);
					this.SendPropertyChanging();
					this._DescrA3 = value;
					this.SendPropertyChanged("DescrA3");
					this.OnDescrA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrA4", DbType="VarChar(512)")]
		public string DescrA4
		{
			get
			{
				return this._DescrA4;
			}
			set
			{
				if ((this._DescrA4 != value))
				{
					this.OnDescrA4Changing(value);
					this.SendPropertyChanging();
					this._DescrA4 = value;
					this.SendPropertyChanged("DescrA4");
					this.OnDescrA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrA5", DbType="VarChar(512)")]
		public string DescrA5
		{
			get
			{
				return this._DescrA5;
			}
			set
			{
				if ((this._DescrA5 != value))
				{
					this.OnDescrA5Changing(value);
					this.SendPropertyChanging();
					this._DescrA5 = value;
					this.SendPropertyChanged("DescrA5");
					this.OnDescrA5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrB1", DbType="VarChar(512)")]
		public string DescrB1
		{
			get
			{
				return this._DescrB1;
			}
			set
			{
				if ((this._DescrB1 != value))
				{
					this.OnDescrB1Changing(value);
					this.SendPropertyChanging();
					this._DescrB1 = value;
					this.SendPropertyChanged("DescrB1");
					this.OnDescrB1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrB2", DbType="VarChar(512)")]
		public string DescrB2
		{
			get
			{
				return this._DescrB2;
			}
			set
			{
				if ((this._DescrB2 != value))
				{
					this.OnDescrB2Changing(value);
					this.SendPropertyChanging();
					this._DescrB2 = value;
					this.SendPropertyChanged("DescrB2");
					this.OnDescrB2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrB3", DbType="VarChar(512)")]
		public string DescrB3
		{
			get
			{
				return this._DescrB3;
			}
			set
			{
				if ((this._DescrB3 != value))
				{
					this.OnDescrB3Changing(value);
					this.SendPropertyChanging();
					this._DescrB3 = value;
					this.SendPropertyChanged("DescrB3");
					this.OnDescrB3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrB4", DbType="VarChar(512)")]
		public string DescrB4
		{
			get
			{
				return this._DescrB4;
			}
			set
			{
				if ((this._DescrB4 != value))
				{
					this.OnDescrB4Changing(value);
					this.SendPropertyChanging();
					this._DescrB4 = value;
					this.SendPropertyChanged("DescrB4");
					this.OnDescrB4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrB5", DbType="VarChar(512)")]
		public string DescrB5
		{
			get
			{
				return this._DescrB5;
			}
			set
			{
				if ((this._DescrB5 != value))
				{
					this.OnDescrB5Changing(value);
					this.SendPropertyChanging();
					this._DescrB5 = value;
					this.SendPropertyChanged("DescrB5");
					this.OnDescrB5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowProgressBar", DbType="Bit")]
		public System.Nullable<bool> ShowProgressBar
		{
			get
			{
				return this._ShowProgressBar;
			}
			set
			{
				if ((this._ShowProgressBar != value))
				{
					this.OnShowProgressBarChanging(value);
					this.SendPropertyChanging();
					this._ShowProgressBar = value;
					this.SendPropertyChanged("ShowProgressBar");
					this.OnShowProgressBarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowProgressGraph", DbType="Bit")]
		public System.Nullable<bool> ShowProgressGraph
		{
			get
			{
				return this._ShowProgressGraph;
			}
			set
			{
				if ((this._ShowProgressGraph != value))
				{
					this.OnShowProgressGraphChanging(value);
					this.SendPropertyChanging();
					this._ShowProgressGraph = value;
					this.SendPropertyChanged("ShowProgressGraph");
					this.OnShowProgressGraphChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowProgressText", DbType="Bit")]
		public System.Nullable<bool> ShowProgressText
		{
			get
			{
				return this._ShowProgressText;
			}
			set
			{
				if ((this._ShowProgressText != value))
				{
					this.OnShowProgressTextChanging(value);
					this.SendPropertyChanging();
					this._ShowProgressText = value;
					this.SendPropertyChanged("ShowProgressText");
					this.OnShowProgressTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionA6", DbType="Int")]
		public System.Nullable<int> PositionA6
		{
			get
			{
				return this._PositionA6;
			}
			set
			{
				if ((this._PositionA6 != value))
				{
					this.OnPositionA6Changing(value);
					this.SendPropertyChanging();
					this._PositionA6 = value;
					this.SendPropertyChanged("PositionA6");
					this.OnPositionA6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterA6", DbType="VarChar(100)")]
		public string FilterA6
		{
			get
			{
				return this._FilterA6;
			}
			set
			{
				if ((this._FilterA6 != value))
				{
					this.OnFilterA6Changing(value);
					this.SendPropertyChanging();
					this._FilterA6 = value;
					this.SendPropertyChanged("FilterA6");
					this.OnFilterA6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionB6", DbType="Int")]
		public System.Nullable<int> PositionB6
		{
			get
			{
				return this._PositionB6;
			}
			set
			{
				if ((this._PositionB6 != value))
				{
					this.OnPositionB6Changing(value);
					this.SendPropertyChanging();
					this._PositionB6 = value;
					this.SendPropertyChanged("PositionB6");
					this.OnPositionB6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterB6", DbType="VarChar(100)")]
		public string FilterB6
		{
			get
			{
				return this._FilterB6;
			}
			set
			{
				if ((this._FilterB6 != value))
				{
					this.OnFilterB6Changing(value);
					this.SendPropertyChanging();
					this._FilterB6 = value;
					this.SendPropertyChanged("FilterB6");
					this.OnFilterB6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeA6", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeA6
		{
			get
			{
				return this._IsClubTypeA6;
			}
			set
			{
				if ((this._IsClubTypeA6 != value))
				{
					this.OnIsClubTypeA6Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeA6 = value;
					this.SendPropertyChanged("IsClubTypeA6");
					this.OnIsClubTypeA6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClubTypeB6", DbType="Bit")]
		public System.Nullable<bool> IsClubTypeB6
		{
			get
			{
				return this._IsClubTypeB6;
			}
			set
			{
				if ((this._IsClubTypeB6 != value))
				{
					this.OnIsClubTypeB6Changing(value);
					this.SendPropertyChanging();
					this._IsClubTypeB6 = value;
					this.SendPropertyChanged("IsClubTypeB6");
					this.OnIsClubTypeB6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrA6", DbType="VarChar(512)")]
		public string DescrA6
		{
			get
			{
				return this._DescrA6;
			}
			set
			{
				if ((this._DescrA6 != value))
				{
					this.OnDescrA6Changing(value);
					this.SendPropertyChanging();
					this._DescrA6 = value;
					this.SendPropertyChanged("DescrA6");
					this.OnDescrA6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescrB6", DbType="VarChar(512)")]
		public string DescrB6
		{
			get
			{
				return this._DescrB6;
			}
			set
			{
				if ((this._DescrB6 != value))
				{
					this.OnDescrB6Changing(value);
					this.SendPropertyChanging();
					this._DescrB6 = value;
					this.SendPropertyChanged("DescrB6");
					this.OnDescrB6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeLink", DbType="VarChar(MAX)")]
		public string HomeLink
		{
			get
			{
				return this._HomeLink;
			}
			set
			{
				if ((this._HomeLink != value))
				{
					this.OnHomeLinkChanging(value);
					this.SendPropertyChanging();
					this._HomeLink = value;
					this.SendPropertyChanged("HomeLink");
					this.OnHomeLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticReportTab", DbType="VarChar(500)")]
		public string StaticReportTab
		{
			get
			{
				return this._StaticReportTab;
			}
			set
			{
				if ((this._StaticReportTab != value))
				{
					this.OnStaticReportTabChanging(value);
					this.SendPropertyChanging();
					this._StaticReportTab = value;
					this.SendPropertyChanged("StaticReportTab");
					this.OnStaticReportTabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticReportHeader", DbType="VarChar(MAX)")]
		public string StaticReportHeader
		{
			get
			{
				return this._StaticReportHeader;
			}
			set
			{
				if ((this._StaticReportHeader != value))
				{
					this.OnStaticReportHeaderChanging(value);
					this.SendPropertyChanging();
					this._StaticReportHeader = value;
					this.SendPropertyChanged("StaticReportHeader");
					this.OnStaticReportHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyDataTabOrder", DbType="TinyInt NOT NULL")]
		public byte MyDataTabOrder
		{
			get
			{
				return this._MyDataTabOrder;
			}
			set
			{
				if ((this._MyDataTabOrder != value))
				{
					this.OnMyDataTabOrderChanging(value);
					this.SendPropertyChanging();
					this._MyDataTabOrder = value;
					this.SendPropertyChanged("MyDataTabOrder");
					this.OnMyDataTabOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareDataTabOrder", DbType="TinyInt NOT NULL")]
		public byte CompareDataTabOrder
		{
			get
			{
				return this._CompareDataTabOrder;
			}
			set
			{
				if ((this._CompareDataTabOrder != value))
				{
					this.OnCompareDataTabOrderChanging(value);
					this.SendPropertyChanging();
					this._CompareDataTabOrder = value;
					this.SendPropertyChanged("CompareDataTabOrder");
					this.OnCompareDataTabOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaticReportTabOrder", DbType="TinyInt NOT NULL")]
		public byte StaticReportTabOrder
		{
			get
			{
				return this._StaticReportTabOrder;
			}
			set
			{
				if ((this._StaticReportTabOrder != value))
				{
					this.OnStaticReportTabOrderChanging(value);
					this.SendPropertyChanging();
					this._StaticReportTabOrder = value;
					this.SendPropertyChanged("StaticReportTabOrder");
					this.OnStaticReportTabOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTabOrder", DbType="TinyInt NOT NULL")]
		public byte ReportTabOrder
		{
			get
			{
				return this._ReportTabOrder;
			}
			set
			{
				if ((this._ReportTabOrder != value))
				{
					this.OnReportTabOrderChanging(value);
					this.SendPropertyChanging();
					this._ReportTabOrder = value;
					this.SendPropertyChanged("ReportTabOrder");
					this.OnReportTabOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTabDisplayStyle", DbType="TinyInt NOT NULL")]
		public byte ReportTabDisplayStyle
		{
			get
			{
				return this._ReportTabDisplayStyle;
			}
			set
			{
				if ((this._ReportTabDisplayStyle != value))
				{
					this.OnReportTabDisplayStyleChanging(value);
					this.SendPropertyChanging();
					this._ReportTabDisplayStyle = value;
					this.SendPropertyChanged("ReportTabDisplayStyle");
					this.OnReportTabDisplayStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTileHeader", DbType="VarChar(500)")]
		public string ReportTileHeader
		{
			get
			{
				return this._ReportTileHeader;
			}
			set
			{
				if ((this._ReportTileHeader != value))
				{
					this.OnReportTileHeaderChanging(value);
					this.SendPropertyChanging();
					this._ReportTileHeader = value;
					this.SendPropertyChanged("ReportTileHeader");
					this.OnReportTileHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClubType_Club", Storage="_Clubs", ThisKey="ID", OtherKey="ClubTypeID")]
		public EntitySet<Club> Clubs
		{
			get
			{
				return this._Clubs;
			}
			set
			{
				this._Clubs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClubType_Filter", Storage="_Filters", ThisKey="ID", OtherKey="ClubTypeID")]
		public EntitySet<Filter> Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				this._Filters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClubType_Skus", Storage="_Skus", ThisKey="ID", OtherKey="ClubTypeID")]
		public EntitySet<Skus> Skus
		{
			get
			{
				return this._Skus;
			}
			set
			{
				this._Skus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.ClubType = this;
		}
		
		private void detach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.ClubType = null;
		}
		
		private void attach_Filters(Filter entity)
		{
			this.SendPropertyChanging();
			entity.ClubType = this;
		}
		
		private void detach_Filters(Filter entity)
		{
			this.SendPropertyChanging();
			entity.ClubType = null;
		}
		
		private void attach_Skus(Skus entity)
		{
			this.SendPropertyChanging();
			entity.ClubType = this;
		}
		
		private void detach_Skus(Skus entity)
		{
			this.SendPropertyChanging();
			entity.ClubType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Countries")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _Name;
		
		private string _Abbreviation;
		
		private EntitySet<Club> _Clubs;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    #endregion
		
		public Country()
		{
			this._Clubs = new EntitySet<Club>(new Action<Club>(this.attach_Clubs), new Action<Club>(this.detach_Clubs));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Club", Storage="_Clubs", ThisKey="CountryID", OtherKey="CountryID")]
		public EntitySet<Club> Clubs
		{
			get
			{
				return this._Clubs;
			}
			set
			{
				this._Clubs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_User", Storage="_Users", ThisKey="CountryID", OtherKey="CountryID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coupons")]
	public partial class Coupon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private decimal _Discount;
		
		private int _Quantity;
		
		private string _Skus;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private decimal _RecurDiscount;
		
		private byte _RecurType;
		
		private int _RecurCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnSkusChanging(string value);
    partial void OnSkusChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnRecurDiscountChanging(decimal value);
    partial void OnRecurDiscountChanged();
    partial void OnRecurTypeChanging(byte value);
    partial void OnRecurTypeChanged();
    partial void OnRecurCountChanging(int value);
    partial void OnRecurCountChanged();
    #endregion
		
		public Coupon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skus", DbType="VarChar(256)")]
		public string Skus
		{
			get
			{
				return this._Skus;
			}
			set
			{
				if ((this._Skus != value))
				{
					this.OnSkusChanging(value);
					this.SendPropertyChanging();
					this._Skus = value;
					this.SendPropertyChanged("Skus");
					this.OnSkusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurDiscount", DbType="Money NOT NULL")]
		public decimal RecurDiscount
		{
			get
			{
				return this._RecurDiscount;
			}
			set
			{
				if ((this._RecurDiscount != value))
				{
					this.OnRecurDiscountChanging(value);
					this.SendPropertyChanging();
					this._RecurDiscount = value;
					this.SendPropertyChanged("RecurDiscount");
					this.OnRecurDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurType", DbType="TinyInt NOT NULL")]
		public byte RecurType
		{
			get
			{
				return this._RecurType;
			}
			set
			{
				if ((this._RecurType != value))
				{
					this.OnRecurTypeChanging(value);
					this.SendPropertyChanging();
					this._RecurType = value;
					this.SendPropertyChanged("RecurType");
					this.OnRecurTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurCount", DbType="Int NOT NULL")]
		public int RecurCount
		{
			get
			{
				return this._RecurCount;
			}
			set
			{
				if ((this._RecurCount != value))
				{
					this.OnRecurCountChanging(value);
					this.SendPropertyChanging();
					this._RecurCount = value;
					this.SendPropertyChanged("RecurCount");
					this.OnRecurCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dependency")]
	public partial class Dependency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private int _CalculationID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnCalculationIDChanging(int value);
    partial void OnCalculationIDChanged();
    #endregion
		
		public Dependency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CalculationID
		{
			get
			{
				return this._CalculationID;
			}
			set
			{
				if ((this._CalculationID != value))
				{
					this.OnCalculationIDChanging(value);
					this.SendPropertyChanging();
					this._CalculationID = value;
					this.SendPropertyChanged("CalculationID");
					this.OnCalculationIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Favorites")]
	public partial class Favorite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClubID;
		
		private int _ClubTypeID;
		
		private string _Name;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnClubTypeIDChanging(int value);
    partial void OnClubTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public Favorite()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL")]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubTypeID", DbType="Int NOT NULL")]
		public int ClubTypeID
		{
			get
			{
				return this._ClubTypeID;
			}
			set
			{
				if ((this._ClubTypeID != value))
				{
					this.OnClubTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ClubTypeID = value;
					this.SendPropertyChanged("ClubTypeID");
					this.OnClubTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileAnswers")]
	public partial class FileAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private int _ClubID;
		
		private short _Year;
		
		private byte _Month;
		
		private System.Data.Linq.Binary _FileData;
		
		private string _MimeType;
		
		private string _FileName;
		
		private System.DateTime _LastModified;
		
		private int _FileSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnFileDataChanging(System.Data.Linq.Binary value);
    partial void OnFileDataChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnLastModifiedChanging(System.DateTime value);
    partial void OnLastModifiedChanged();
    partial void OnFileSizeChanging(int value);
    partial void OnFileSizeChanged();
    #endregion
		
		public FileAnswer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileData", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileData
		{
			get
			{
				return this._FileData;
			}
			set
			{
				if ((this._FileData != value))
				{
					this.OnFileDataChanging(value);
					this.SendPropertyChanging();
					this._FileData = value;
					this.SendPropertyChanged("FileData");
					this.OnFileDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="Int NOT NULL")]
		public int FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FilterInstances")]
	public partial class FilterInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClubID;
		
		private EntityRef<FilterSession> _FilterSession;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    #endregion
		
		public FilterInstance()
		{
			this._FilterSession = default(EntityRef<FilterSession>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._FilterSession.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FilterSession_FilterInstance", Storage="_FilterSession", ThisKey="ID", OtherKey="FilterID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FilterSession FilterSession
		{
			get
			{
				return this._FilterSession.Entity;
			}
			set
			{
				FilterSession previousValue = this._FilterSession.Entity;
				if (((previousValue != value) 
							|| (this._FilterSession.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FilterSession.Entity = null;
						previousValue.FilterInstances.Remove(this);
					}
					this._FilterSession.Entity = value;
					if ((value != null))
					{
						value.FilterInstances.Add(this);
						this._ID = value.FilterID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("FilterSession");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Filters")]
	public partial class Filter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClubTypeID;
		
		private int _QuestionID;
		
		private string _Label;
		
		private decimal _Min;
		
		private decimal _Max;
		
		private decimal _Resolution;
		
		private bool _IsMultiChoice;
		
		private int _Order;
		
		private bool _IsYesNo;
		
		private EntityRef<ClubType> _ClubType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClubTypeIDChanging(int value);
    partial void OnClubTypeIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnMinChanging(decimal value);
    partial void OnMinChanged();
    partial void OnMaxChanging(decimal value);
    partial void OnMaxChanged();
    partial void OnResolutionChanging(decimal value);
    partial void OnResolutionChanged();
    partial void OnIsMultiChoiceChanging(bool value);
    partial void OnIsMultiChoiceChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnIsYesNoChanging(bool value);
    partial void OnIsYesNoChanged();
    #endregion
		
		public Filter()
		{
			this._ClubType = default(EntityRef<ClubType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubTypeID
		{
			get
			{
				return this._ClubTypeID;
			}
			set
			{
				if ((this._ClubTypeID != value))
				{
					if (this._ClubType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ClubTypeID = value;
					this.SendPropertyChanged("ClubTypeID");
					this.OnClubTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Min", DbType="Decimal(16,2) NOT NULL")]
		public decimal Min
		{
			get
			{
				return this._Min;
			}
			set
			{
				if ((this._Min != value))
				{
					this.OnMinChanging(value);
					this.SendPropertyChanging();
					this._Min = value;
					this.SendPropertyChanged("Min");
					this.OnMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Max", DbType="Decimal(16,2) NOT NULL")]
		public decimal Max
		{
			get
			{
				return this._Max;
			}
			set
			{
				if ((this._Max != value))
				{
					this.OnMaxChanging(value);
					this.SendPropertyChanging();
					this._Max = value;
					this.SendPropertyChanged("Max");
					this.OnMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution", DbType="Decimal(16,2) NOT NULL")]
		public decimal Resolution
		{
			get
			{
				return this._Resolution;
			}
			set
			{
				if ((this._Resolution != value))
				{
					this.OnResolutionChanging(value);
					this.SendPropertyChanging();
					this._Resolution = value;
					this.SendPropertyChanged("Resolution");
					this.OnResolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMultiChoice", DbType="Bit NOT NULL")]
		public bool IsMultiChoice
		{
			get
			{
				return this._IsMultiChoice;
			}
			set
			{
				if ((this._IsMultiChoice != value))
				{
					this.OnIsMultiChoiceChanging(value);
					this.SendPropertyChanging();
					this._IsMultiChoice = value;
					this.SendPropertyChanged("IsMultiChoice");
					this.OnIsMultiChoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsYesNo", DbType="Bit NOT NULL")]
		public bool IsYesNo
		{
			get
			{
				return this._IsYesNo;
			}
			set
			{
				if ((this._IsYesNo != value))
				{
					this.OnIsYesNoChanging(value);
					this.SendPropertyChanging();
					this._IsYesNo = value;
					this.SendPropertyChanged("IsYesNo");
					this.OnIsYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClubType_Filter", Storage="_ClubType", ThisKey="ClubTypeID", OtherKey="ID", IsForeignKey=true)]
		public ClubType ClubType
		{
			get
			{
				return this._ClubType.Entity;
			}
			set
			{
				ClubType previousValue = this._ClubType.Entity;
				if (((previousValue != value) 
							|| (this._ClubType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClubType.Entity = null;
						previousValue.Filters.Remove(this);
					}
					this._ClubType.Entity = value;
					if ((value != null))
					{
						value.Filters.Add(this);
						this._ClubTypeID = value.ID;
					}
					else
					{
						this._ClubTypeID = default(int);
					}
					this.SendPropertyChanged("ClubType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FilterSessions")]
	public partial class FilterSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FilterID;
		
		private System.DateTime _Created;
		
		private EntitySet<FilterInstance> _FilterInstances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFilterIDChanging(int value);
    partial void OnFilterIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    #endregion
		
		public FilterSession()
		{
			this._FilterInstances = new EntitySet<FilterInstance>(new Action<FilterInstance>(this.attach_FilterInstances), new Action<FilterInstance>(this.detach_FilterInstances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FilterID
		{
			get
			{
				return this._FilterID;
			}
			set
			{
				if ((this._FilterID != value))
				{
					this.OnFilterIDChanging(value);
					this.SendPropertyChanging();
					this._FilterID = value;
					this.SendPropertyChanged("FilterID");
					this.OnFilterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FilterSession_FilterInstance", Storage="_FilterInstances", ThisKey="FilterID", OtherKey="ID")]
		public EntitySet<FilterInstance> FilterInstances
		{
			get
			{
				return this._FilterInstances;
			}
			set
			{
				this._FilterInstances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FilterInstances(FilterInstance entity)
		{
			this.SendPropertyChanging();
			entity.FilterSession = this;
		}
		
		private void detach_FilterInstances(FilterInstance entity)
		{
			this.SendPropertyChanging();
			entity.FilterSession = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FunctionalAreas")]
	public partial class FunctionalArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AreaID;
		
		private string _Name;
		
		private string _ImageUrl;
		
		private bool _IsMonthly;
		
		private bool _IsGlobal;
		
		private EntitySet<QuestionGroup> _QuestionGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAreaIDChanging(int value);
    partial void OnAreaIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnIsMonthlyChanging(bool value);
    partial void OnIsMonthlyChanged();
    partial void OnIsGlobalChanging(bool value);
    partial void OnIsGlobalChanged();
    #endregion
		
		public FunctionalArea()
		{
			this._QuestionGroups = new EntitySet<QuestionGroup>(new Action<QuestionGroup>(this.attach_QuestionGroups), new Action<QuestionGroup>(this.detach_QuestionGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="VarChar(256)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMonthly", DbType="Bit NOT NULL")]
		public bool IsMonthly
		{
			get
			{
				return this._IsMonthly;
			}
			set
			{
				if ((this._IsMonthly != value))
				{
					this.OnIsMonthlyChanging(value);
					this.SendPropertyChanging();
					this._IsMonthly = value;
					this.SendPropertyChanged("IsMonthly");
					this.OnIsMonthlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGlobal", DbType="Bit NOT NULL")]
		public bool IsGlobal
		{
			get
			{
				return this._IsGlobal;
			}
			set
			{
				if ((this._IsGlobal != value))
				{
					this.OnIsGlobalChanging(value);
					this.SendPropertyChanging();
					this._IsGlobal = value;
					this.SendPropertyChanged("IsGlobal");
					this.OnIsGlobalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FunctionalArea_QuestionGroup", Storage="_QuestionGroups", ThisKey="AreaID", OtherKey="AreaID")]
		public EntitySet<QuestionGroup> QuestionGroups
		{
			get
			{
				return this._QuestionGroups;
			}
			set
			{
				this._QuestionGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuestionGroups(QuestionGroup entity)
		{
			this.SendPropertyChanging();
			entity.FunctionalArea = this;
		}
		
		private void detach_QuestionGroups(QuestionGroup entity)
		{
			this.SendPropertyChanging();
			entity.FunctionalArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Timestamp;
		
		private int _ActionID;
		
		private System.Nullable<int> _UserID;
		
		private string _Parameters;
		
		private string _ErrorMsg;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnActionIDChanging(int value);
    partial void OnActionIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnParametersChanging(string value);
    partial void OnParametersChanged();
    partial void OnErrorMsgChanging(string value);
    partial void OnErrorMsgChanged();
    #endregion
		
		public Log()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="Int NOT NULL")]
		public int ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="VarChar(256)")]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this.OnParametersChanging(value);
					this.SendPropertyChanging();
					this._Parameters = value;
					this.SendPropertyChanged("Parameters");
					this.OnParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMsg", DbType="VarChar(MAX)")]
		public string ErrorMsg
		{
			get
			{
				return this._ErrorMsg;
			}
			set
			{
				if ((this._ErrorMsg != value))
				{
					this.OnErrorMsgChanging(value);
					this.SendPropertyChanging();
					this._ErrorMsg = value;
					this.SendPropertyChanged("ErrorMsg");
					this.OnErrorMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Log", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Logs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Logs.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MultipleChoiceAnswers")]
	public partial class MultipleChoiceAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private int _ClubID;
		
		private short _Year;
		
		private byte _Month;
		
		private int _AnswerChoiceID;
		
		private string _ChoiceList;
		
		private EntityRef<Club> _Club;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnAnswerChoiceIDChanging(int value);
    partial void OnAnswerChoiceIDChanged();
    partial void OnChoiceListChanging(string value);
    partial void OnChoiceListChanged();
    #endregion
		
		public MultipleChoiceAnswer()
		{
			this._Club = default(EntityRef<Club>);
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerChoiceID", DbType="Int NOT NULL")]
		public int AnswerChoiceID
		{
			get
			{
				return this._AnswerChoiceID;
			}
			set
			{
				if ((this._AnswerChoiceID != value))
				{
					this.OnAnswerChoiceIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerChoiceID = value;
					this.SendPropertyChanged("AnswerChoiceID");
					this.OnAnswerChoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceList", DbType="VarChar(512)")]
		public string ChoiceList
		{
			get
			{
				return this._ChoiceList;
			}
			set
			{
				if ((this._ChoiceList != value))
				{
					this.OnChoiceListChanging(value);
					this.SendPropertyChanging();
					this._ChoiceList = value;
					this.SendPropertyChanged("ChoiceList");
					this.OnChoiceListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_MultipleChoiceAnswer", Storage="_Club", ThisKey="ClubID", OtherKey="ClubID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.MultipleChoiceAnswers.Remove(this);
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.MultipleChoiceAnswers.Add(this);
						this._ClubID = value.ClubID;
					}
					else
					{
						this._ClubID = default(int);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_MultipleChoiceAnswer", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.MultipleChoiceAnswers.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.MultipleChoiceAnswers.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MultipleChoiceQuestionInfo")]
	public partial class MultipleChoiceQuestionInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private System.Nullable<int> _Order;
		
		private string _Answer;
		
		private int _MultipleChoiceQuestionInfoID;
		
		private System.Nullable<int> _ScoringCategory;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnMultipleChoiceQuestionInfoIDChanging(int value);
    partial void OnMultipleChoiceQuestionInfoIDChanged();
    partial void OnScoringCategoryChanging(System.Nullable<int> value);
    partial void OnScoringCategoryChanged();
    #endregion
		
		public MultipleChoiceQuestionInfo()
		{
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultipleChoiceQuestionInfoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MultipleChoiceQuestionInfoID
		{
			get
			{
				return this._MultipleChoiceQuestionInfoID;
			}
			set
			{
				if ((this._MultipleChoiceQuestionInfoID != value))
				{
					this.OnMultipleChoiceQuestionInfoIDChanging(value);
					this.SendPropertyChanging();
					this._MultipleChoiceQuestionInfoID = value;
					this.SendPropertyChanged("MultipleChoiceQuestionInfoID");
					this.OnMultipleChoiceQuestionInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoringCategory", DbType="Int")]
		public System.Nullable<int> ScoringCategory
		{
			get
			{
				return this._ScoringCategory;
			}
			set
			{
				if ((this._ScoringCategory != value))
				{
					this.OnScoringCategoryChanging(value);
					this.SendPropertyChanging();
					this._ScoringCategory = value;
					this.SendPropertyChanged("ScoringCategory");
					this.OnScoringCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_MultipleChoiceQuestionInfo", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.MultipleChoiceQuestionInfos.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.MultipleChoiceQuestionInfos.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NumericAnswers")]
	public partial class NumericAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private int _ClubID;
		
		private short _Year;
		
		private byte _Month;
		
		private double _Answer;
		
		private EntityRef<Club> _Club;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnAnswerChanging(double value);
    partial void OnAnswerChanged();
    #endregion
		
		public NumericAnswer()
		{
			this._Club = default(EntityRef<Club>);
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="Float NOT NULL")]
		public double Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_NumericAnswer", Storage="_Club", ThisKey="ClubID", OtherKey="ClubID", IsForeignKey=true)]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.NumericAnswers.Remove(this);
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.NumericAnswers.Add(this);
						this._ClubID = value.ClubID;
					}
					else
					{
						this._ClubID = default(int);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_NumericAnswer", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.NumericAnswers.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.NumericAnswers.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NumericQuestionInfo")]
	public partial class NumericQuestionInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private System.Nullable<int> _MinValue;
		
		private System.Nullable<int> _MaxValue;
		
		private bool _IsCurrency;
		
		private bool _IsPercentage;
		
		private byte _Decimals;
		
		private bool _CommaDivider;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnMinValueChanging(System.Nullable<int> value);
    partial void OnMinValueChanged();
    partial void OnMaxValueChanging(System.Nullable<int> value);
    partial void OnMaxValueChanged();
    partial void OnIsCurrencyChanging(bool value);
    partial void OnIsCurrencyChanged();
    partial void OnIsPercentageChanging(bool value);
    partial void OnIsPercentageChanged();
    partial void OnDecimalsChanging(byte value);
    partial void OnDecimalsChanged();
    partial void OnCommaDividerChanging(bool value);
    partial void OnCommaDividerChanged();
    #endregion
		
		public NumericQuestionInfo()
		{
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValue", DbType="Int")]
		public System.Nullable<int> MinValue
		{
			get
			{
				return this._MinValue;
			}
			set
			{
				if ((this._MinValue != value))
				{
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxValue", DbType="Int")]
		public System.Nullable<int> MaxValue
		{
			get
			{
				return this._MaxValue;
			}
			set
			{
				if ((this._MaxValue != value))
				{
					this.OnMaxValueChanging(value);
					this.SendPropertyChanging();
					this._MaxValue = value;
					this.SendPropertyChanged("MaxValue");
					this.OnMaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrency", DbType="Bit NOT NULL")]
		public bool IsCurrency
		{
			get
			{
				return this._IsCurrency;
			}
			set
			{
				if ((this._IsCurrency != value))
				{
					this.OnIsCurrencyChanging(value);
					this.SendPropertyChanging();
					this._IsCurrency = value;
					this.SendPropertyChanged("IsCurrency");
					this.OnIsCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPercentage", DbType="Bit NOT NULL")]
		public bool IsPercentage
		{
			get
			{
				return this._IsPercentage;
			}
			set
			{
				if ((this._IsPercentage != value))
				{
					this.OnIsPercentageChanging(value);
					this.SendPropertyChanging();
					this._IsPercentage = value;
					this.SendPropertyChanged("IsPercentage");
					this.OnIsPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decimals", DbType="TinyInt NOT NULL")]
		public byte Decimals
		{
			get
			{
				return this._Decimals;
			}
			set
			{
				if ((this._Decimals != value))
				{
					this.OnDecimalsChanging(value);
					this.SendPropertyChanging();
					this._Decimals = value;
					this.SendPropertyChanged("Decimals");
					this.OnDecimalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommaDivider", DbType="Bit NOT NULL")]
		public bool CommaDivider
		{
			get
			{
				return this._CommaDivider;
			}
			set
			{
				if ((this._CommaDivider != value))
				{
					this.OnCommaDividerChanging(value);
					this.SendPropertyChanging();
					this._CommaDivider = value;
					this.SendPropertyChanged("CommaDivider");
					this.OnCommaDividerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_NumericQuestionInfo", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.NumericQuestionInfo = null;
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.NumericQuestionInfo = this;
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfferLogs")]
	public partial class OfferLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClubID;
		
		private int _OfferID;
		
		private System.DateTime _Date;
		
		private short _ResponseType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnOfferIDChanging(int value);
    partial void OnOfferIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnResponseTypeChanging(short value);
    partial void OnResponseTypeChanged();
    #endregion
		
		public OfferLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL")]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferID", DbType="Int NOT NULL")]
		public int OfferID
		{
			get
			{
				return this._OfferID;
			}
			set
			{
				if ((this._OfferID != value))
				{
					this.OnOfferIDChanging(value);
					this.SendPropertyChanging();
					this._OfferID = value;
					this.SendPropertyChanged("OfferID");
					this.OnOfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseType", DbType="SmallInt NOT NULL")]
		public short ResponseType
		{
			get
			{
				return this._ResponseType;
			}
			set
			{
				if ((this._ResponseType != value))
				{
					this.OnResponseTypeChanging(value);
					this.SendPropertyChanging();
					this._ResponseType = value;
					this.SendPropertyChanged("ResponseType");
					this.OnResponseTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Offers")]
	public partial class Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferID;
		
		private string _OfferUrl;
		
		private string _FancyBoxDimensions;
		
		private string _ApplicableSkus;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _MaxRedemptions;
		
		private string _OfferSkuID;
		
		private string _TopOffer;
		
		private bool _ShowOnLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferIDChanging(int value);
    partial void OnOfferIDChanged();
    partial void OnOfferUrlChanging(string value);
    partial void OnOfferUrlChanged();
    partial void OnFancyBoxDimensionsChanging(string value);
    partial void OnFancyBoxDimensionsChanged();
    partial void OnApplicableSkusChanging(string value);
    partial void OnApplicableSkusChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnMaxRedemptionsChanging(int value);
    partial void OnMaxRedemptionsChanged();
    partial void OnOfferSkuIDChanging(string value);
    partial void OnOfferSkuIDChanged();
    partial void OnTopOfferChanging(string value);
    partial void OnTopOfferChanged();
    partial void OnShowOnLoginChanging(bool value);
    partial void OnShowOnLoginChanged();
    #endregion
		
		public Offer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OfferID
		{
			get
			{
				return this._OfferID;
			}
			set
			{
				if ((this._OfferID != value))
				{
					this.OnOfferIDChanging(value);
					this.SendPropertyChanging();
					this._OfferID = value;
					this.SendPropertyChanged("OfferID");
					this.OnOfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferUrl", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string OfferUrl
		{
			get
			{
				return this._OfferUrl;
			}
			set
			{
				if ((this._OfferUrl != value))
				{
					this.OnOfferUrlChanging(value);
					this.SendPropertyChanging();
					this._OfferUrl = value;
					this.SendPropertyChanged("OfferUrl");
					this.OnOfferUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FancyBoxDimensions", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FancyBoxDimensions
		{
			get
			{
				return this._FancyBoxDimensions;
			}
			set
			{
				if ((this._FancyBoxDimensions != value))
				{
					this.OnFancyBoxDimensionsChanging(value);
					this.SendPropertyChanging();
					this._FancyBoxDimensions = value;
					this.SendPropertyChanged("FancyBoxDimensions");
					this.OnFancyBoxDimensionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicableSkus", DbType="NVarChar(1000)")]
		public string ApplicableSkus
		{
			get
			{
				return this._ApplicableSkus;
			}
			set
			{
				if ((this._ApplicableSkus != value))
				{
					this.OnApplicableSkusChanging(value);
					this.SendPropertyChanging();
					this._ApplicableSkus = value;
					this.SendPropertyChanged("ApplicableSkus");
					this.OnApplicableSkusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRedemptions", DbType="Int NOT NULL")]
		public int MaxRedemptions
		{
			get
			{
				return this._MaxRedemptions;
			}
			set
			{
				if ((this._MaxRedemptions != value))
				{
					this.OnMaxRedemptionsChanging(value);
					this.SendPropertyChanging();
					this._MaxRedemptions = value;
					this.SendPropertyChanged("MaxRedemptions");
					this.OnMaxRedemptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferSkuID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OfferSkuID
		{
			get
			{
				return this._OfferSkuID;
			}
			set
			{
				if ((this._OfferSkuID != value))
				{
					this.OnOfferSkuIDChanging(value);
					this.SendPropertyChanging();
					this._OfferSkuID = value;
					this.SendPropertyChanged("OfferSkuID");
					this.OnOfferSkuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopOffer", DbType="NVarChar(250)")]
		public string TopOffer
		{
			get
			{
				return this._TopOffer;
			}
			set
			{
				if ((this._TopOffer != value))
				{
					this.OnTopOfferChanging(value);
					this.SendPropertyChanging();
					this._TopOffer = value;
					this.SendPropertyChanged("TopOffer");
					this.OnTopOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOnLogin", DbType="Bit NOT NULL")]
		public bool ShowOnLogin
		{
			get
			{
				return this._ShowOnLogin;
			}
			set
			{
				if ((this._ShowOnLogin != value))
				{
					this.OnShowOnLoginChanging(value);
					this.SendPropertyChanging();
					this._ShowOnLogin = value;
					this.SendPropertyChanged("ShowOnLogin");
					this.OnShowOnLoginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeerClusterClubs")]
	public partial class PeerClusterClub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PeerClusterID;
		
		private int _ClubID;
		
		private EntityRef<PeerCluster> _PeerCluster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPeerClusterIDChanging(int value);
    partial void OnPeerClusterIDChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    #endregion
		
		public PeerClusterClub()
		{
			this._PeerCluster = default(EntityRef<PeerCluster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeerClusterID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PeerClusterID
		{
			get
			{
				return this._PeerClusterID;
			}
			set
			{
				if ((this._PeerClusterID != value))
				{
					if (this._PeerCluster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeerClusterIDChanging(value);
					this.SendPropertyChanging();
					this._PeerClusterID = value;
					this.SendPropertyChanged("PeerClusterID");
					this.OnPeerClusterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeerCluster_PeerClusterClub", Storage="_PeerCluster", ThisKey="PeerClusterID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PeerCluster PeerCluster
		{
			get
			{
				return this._PeerCluster.Entity;
			}
			set
			{
				PeerCluster previousValue = this._PeerCluster.Entity;
				if (((previousValue != value) 
							|| (this._PeerCluster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeerCluster.Entity = null;
						previousValue.PeerClusterClubs.Remove(this);
					}
					this._PeerCluster.Entity = value;
					if ((value != null))
					{
						value.PeerClusterClubs.Add(this);
						this._PeerClusterID = value.ID;
					}
					else
					{
						this._PeerClusterID = default(int);
					}
					this.SendPropertyChanged("PeerCluster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeerClusters")]
	public partial class PeerCluster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _OwnerClubID;
		
		private bool _Shared;
		
		private EntitySet<PeerClusterClub> _PeerClusterClubs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOwnerClubIDChanging(System.Nullable<int> value);
    partial void OnOwnerClubIDChanged();
    partial void OnSharedChanging(bool value);
    partial void OnSharedChanged();
    #endregion
		
		public PeerCluster()
		{
			this._PeerClusterClubs = new EntitySet<PeerClusterClub>(new Action<PeerClusterClub>(this.attach_PeerClusterClubs), new Action<PeerClusterClub>(this.detach_PeerClusterClubs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerClubID", DbType="Int")]
		public System.Nullable<int> OwnerClubID
		{
			get
			{
				return this._OwnerClubID;
			}
			set
			{
				if ((this._OwnerClubID != value))
				{
					this.OnOwnerClubIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerClubID = value;
					this.SendPropertyChanged("OwnerClubID");
					this.OnOwnerClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shared", DbType="Bit NOT NULL")]
		public bool Shared
		{
			get
			{
				return this._Shared;
			}
			set
			{
				if ((this._Shared != value))
				{
					this.OnSharedChanging(value);
					this.SendPropertyChanging();
					this._Shared = value;
					this.SendPropertyChanged("Shared");
					this.OnSharedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeerCluster_PeerClusterClub", Storage="_PeerClusterClubs", ThisKey="ID", OtherKey="PeerClusterID")]
		public EntitySet<PeerClusterClub> PeerClusterClubs
		{
			get
			{
				return this._PeerClusterClubs;
			}
			set
			{
				this._PeerClusterClubs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PeerClusterClubs(PeerClusterClub entity)
		{
			this.SendPropertyChanging();
			entity.PeerCluster = this;
		}
		
		private void detach_PeerClusterClubs(PeerClusterClub entity)
		{
			this.SendPropertyChanging();
			entity.PeerCluster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintSessions")]
	public partial class PrintSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Token;
		
		private System.Nullable<System.DateTime> _Expires;
		
		private int _UserID;
		
		private short _Year;
		
		private System.DateTime _MonthDate;
		
		private string _AnnualView;
		
		private string _MonthlyView;
		
		private int _FilterID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTokenChanging(System.Data.Linq.Binary value);
    partial void OnTokenChanged();
    partial void OnExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiresChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthDateChanging(System.DateTime value);
    partial void OnMonthDateChanged();
    partial void OnAnnualViewChanging(string value);
    partial void OnAnnualViewChanged();
    partial void OnMonthlyViewChanging(string value);
    partial void OnMonthlyViewChanged();
    partial void OnFilterIDChanging(int value);
    partial void OnFilterIDChanged();
    #endregion
		
		public PrintSession()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="Binary(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expires", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expires
		{
			get
			{
				return this._Expires;
			}
			set
			{
				if ((this._Expires != value))
				{
					this.OnExpiresChanging(value);
					this.SendPropertyChanging();
					this._Expires = value;
					this.SendPropertyChanged("Expires");
					this.OnExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDate", DbType="DateTime NOT NULL")]
		public System.DateTime MonthDate
		{
			get
			{
				return this._MonthDate;
			}
			set
			{
				if ((this._MonthDate != value))
				{
					this.OnMonthDateChanging(value);
					this.SendPropertyChanging();
					this._MonthDate = value;
					this.SendPropertyChanged("MonthDate");
					this.OnMonthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualView", DbType="VarChar(256)")]
		public string AnnualView
		{
			get
			{
				return this._AnnualView;
			}
			set
			{
				if ((this._AnnualView != value))
				{
					this.OnAnnualViewChanging(value);
					this.SendPropertyChanging();
					this._AnnualView = value;
					this.SendPropertyChanged("AnnualView");
					this.OnAnnualViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyView", DbType="VarChar(256)")]
		public string MonthlyView
		{
			get
			{
				return this._MonthlyView;
			}
			set
			{
				if ((this._MonthlyView != value))
				{
					this.OnMonthlyViewChanging(value);
					this.SendPropertyChanging();
					this._MonthlyView = value;
					this.SendPropertyChanged("MonthlyView");
					this.OnMonthlyViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterID", DbType="Int NOT NULL")]
		public int FilterID
		{
			get
			{
				return this._FilterID;
			}
			set
			{
				if ((this._FilterID != value))
				{
					this.OnFilterIDChanging(value);
					this.SendPropertyChanging();
					this._FilterID = value;
					this.SendPropertyChanged("FilterID");
					this.OnFilterIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchases")]
	public partial class Purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClubID;
		
		private int _UserID;
		
		private int _SkuID;
		
		private System.DateTime _Date;
		
		private decimal _ListPrice;
		
		private decimal _PurchasePrice;
		
		private System.Nullable<int> _CouponId;
		
		private bool _Refunded;
		
		private string _Notes;
		
		private System.Nullable<int> _ReportID;
		
		private string _ClubReportIndex;
		
		private int _Type;
		
		private bool _Invoice;
		
		private System.Nullable<System.DateTime> _BillDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSkuIDChanging(int value);
    partial void OnSkuIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnListPriceChanging(decimal value);
    partial void OnListPriceChanged();
    partial void OnPurchasePriceChanging(decimal value);
    partial void OnPurchasePriceChanged();
    partial void OnCouponIdChanging(System.Nullable<int> value);
    partial void OnCouponIdChanged();
    partial void OnRefundedChanging(bool value);
    partial void OnRefundedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnReportIDChanging(System.Nullable<int> value);
    partial void OnReportIDChanged();
    partial void OnClubReportIndexChanging(string value);
    partial void OnClubReportIndexChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnInvoiceChanging(bool value);
    partial void OnInvoiceChanged();
    partial void OnBillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateChanged();
    #endregion
		
		public Purchase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL")]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkuID", DbType="Int NOT NULL")]
		public int SkuID
		{
			get
			{
				return this._SkuID;
			}
			set
			{
				if ((this._SkuID != value))
				{
					this.OnSkuIDChanging(value);
					this.SendPropertyChanging();
					this._SkuID = value;
					this.SendPropertyChanged("SkuID");
					this.OnSkuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Money NOT NULL")]
		public decimal ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="Money NOT NULL")]
		public decimal PurchasePrice
		{
			get
			{
				return this._PurchasePrice;
			}
			set
			{
				if ((this._PurchasePrice != value))
				{
					this.OnPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._PurchasePrice = value;
					this.SendPropertyChanged("PurchasePrice");
					this.OnPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponId", DbType="Int")]
		public System.Nullable<int> CouponId
		{
			get
			{
				return this._CouponId;
			}
			set
			{
				if ((this._CouponId != value))
				{
					this.OnCouponIdChanging(value);
					this.SendPropertyChanging();
					this._CouponId = value;
					this.SendPropertyChanged("CouponId");
					this.OnCouponIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Refunded", DbType="Bit NOT NULL")]
		public bool Refunded
		{
			get
			{
				return this._Refunded;
			}
			set
			{
				if ((this._Refunded != value))
				{
					this.OnRefundedChanging(value);
					this.SendPropertyChanging();
					this._Refunded = value;
					this.SendPropertyChanged("Refunded");
					this.OnRefundedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", DbType="Int")]
		public System.Nullable<int> ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubReportIndex", DbType="NVarChar(50)")]
		public string ClubReportIndex
		{
			get
			{
				return this._ClubReportIndex;
			}
			set
			{
				if ((this._ClubReportIndex != value))
				{
					this.OnClubReportIndexChanging(value);
					this.SendPropertyChanging();
					this._ClubReportIndex = value;
					this.SendPropertyChanged("ClubReportIndex");
					this.OnClubReportIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice", DbType="Bit NOT NULL")]
		public bool Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BillDate
		{
			get
			{
				return this._BillDate;
			}
			set
			{
				if ((this._BillDate != value))
				{
					this.OnBillDateChanging(value);
					this.SendPropertyChanging();
					this._BillDate = value;
					this.SendPropertyChanged("BillDate");
					this.OnBillDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionGroups")]
	public partial class QuestionGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionGroupID;
		
		private int _AreaID;
		
		private string _Name;
		
		private string _HeaderText;
		
		private int _Order;
		
		private System.Nullable<int> _TemplateGroupID;
		
		private System.Nullable<int> _CheckAllMetricID;
		
		private EntitySet<Question> _Questions;
		
		private EntityRef<FunctionalArea> _FunctionalArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionGroupIDChanging(int value);
    partial void OnQuestionGroupIDChanged();
    partial void OnAreaIDChanging(int value);
    partial void OnAreaIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHeaderTextChanging(string value);
    partial void OnHeaderTextChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnTemplateGroupIDChanging(System.Nullable<int> value);
    partial void OnTemplateGroupIDChanged();
    partial void OnCheckAllMetricIDChanging(System.Nullable<int> value);
    partial void OnCheckAllMetricIDChanged();
    #endregion
		
		public QuestionGroup()
		{
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			this._FunctionalArea = default(EntityRef<FunctionalArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionGroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionGroupID
		{
			get
			{
				return this._QuestionGroupID;
			}
			set
			{
				if ((this._QuestionGroupID != value))
				{
					this.OnQuestionGroupIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionGroupID = value;
					this.SendPropertyChanged("QuestionGroupID");
					this.OnQuestionGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="Int NOT NULL")]
		public int AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					if (this._FunctionalArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderText", DbType="VarChar(MAX)")]
		public string HeaderText
		{
			get
			{
				return this._HeaderText;
			}
			set
			{
				if ((this._HeaderText != value))
				{
					this.OnHeaderTextChanging(value);
					this.SendPropertyChanging();
					this._HeaderText = value;
					this.SendPropertyChanged("HeaderText");
					this.OnHeaderTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateGroupID", DbType="Int")]
		public System.Nullable<int> TemplateGroupID
		{
			get
			{
				return this._TemplateGroupID;
			}
			set
			{
				if ((this._TemplateGroupID != value))
				{
					this.OnTemplateGroupIDChanging(value);
					this.SendPropertyChanging();
					this._TemplateGroupID = value;
					this.SendPropertyChanged("TemplateGroupID");
					this.OnTemplateGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckAllMetricID", DbType="Int")]
		public System.Nullable<int> CheckAllMetricID
		{
			get
			{
				return this._CheckAllMetricID;
			}
			set
			{
				if ((this._CheckAllMetricID != value))
				{
					this.OnCheckAllMetricIDChanging(value);
					this.SendPropertyChanging();
					this._CheckAllMetricID = value;
					this.SendPropertyChanged("CheckAllMetricID");
					this.OnCheckAllMetricIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionGroup_Question", Storage="_Questions", ThisKey="QuestionGroupID", OtherKey="QuestionGroupID")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FunctionalArea_QuestionGroup", Storage="_FunctionalArea", ThisKey="AreaID", OtherKey="AreaID", IsForeignKey=true)]
		public FunctionalArea FunctionalArea
		{
			get
			{
				return this._FunctionalArea.Entity;
			}
			set
			{
				FunctionalArea previousValue = this._FunctionalArea.Entity;
				if (((previousValue != value) 
							|| (this._FunctionalArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FunctionalArea.Entity = null;
						previousValue.QuestionGroups.Remove(this);
					}
					this._FunctionalArea.Entity = value;
					if ((value != null))
					{
						value.QuestionGroups.Add(this);
						this._AreaID = value.AreaID;
					}
					else
					{
						this._AreaID = default(int);
					}
					this.SendPropertyChanged("FunctionalArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.QuestionGroup = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.QuestionGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Questions")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private int _QuestionGroupID;
		
		private int _QuestionTypeID;
		
		private string _Text;
		
		private string _Help;
		
		private string _Prefix;
		
		private bool _IsCalculated;
		
		private int _Order;
		
		private int _Indent;
		
		private System.Nullable<int> _MirrorID;
		
		private string _Checksum;
		
		private bool _ChooseMany;
		
		private bool _SumForYtd;
		
		private string _ChecksumLabel;
		
		private bool _IgnoreZero;
		
		private bool _IsMirrorEditable;
		
		private bool _IsLongAnswer;
		
		private bool _ShowPopupChart;
		
		private bool _IsMirrorOverride;
		
		private EntitySet<YesNoAnswer> _YesNoAnswers;
		
		private EntitySet<MultipleChoiceAnswer> _MultipleChoiceAnswers;
		
		private EntitySet<MultipleChoiceQuestionInfo> _MultipleChoiceQuestionInfos;
		
		private EntitySet<NumericAnswer> _NumericAnswers;
		
		private EntityRef<NumericQuestionInfo> _NumericQuestionInfo;
		
		private EntitySet<TextAnswer> _TextAnswers;
		
		private EntityRef<TextQuestionInfo> _TextQuestionInfo;
		
		private EntityRef<QuestionGroup> _QuestionGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnQuestionGroupIDChanging(int value);
    partial void OnQuestionGroupIDChanged();
    partial void OnQuestionTypeIDChanging(int value);
    partial void OnQuestionTypeIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnHelpChanging(string value);
    partial void OnHelpChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnIsCalculatedChanging(bool value);
    partial void OnIsCalculatedChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnIndentChanging(int value);
    partial void OnIndentChanged();
    partial void OnMirrorIDChanging(System.Nullable<int> value);
    partial void OnMirrorIDChanged();
    partial void OnChecksumChanging(string value);
    partial void OnChecksumChanged();
    partial void OnChooseManyChanging(bool value);
    partial void OnChooseManyChanged();
    partial void OnSumForYtdChanging(bool value);
    partial void OnSumForYtdChanged();
    partial void OnChecksumLabelChanging(string value);
    partial void OnChecksumLabelChanged();
    partial void OnIgnoreZeroChanging(bool value);
    partial void OnIgnoreZeroChanged();
    partial void OnIsMirrorEditableChanging(bool value);
    partial void OnIsMirrorEditableChanged();
    partial void OnIsLongAnswerChanging(bool value);
    partial void OnIsLongAnswerChanged();
    partial void OnShowPopupChartChanging(bool value);
    partial void OnShowPopupChartChanged();
    partial void OnIsMirrorOverrideChanging(bool value);
    partial void OnIsMirrorOverrideChanged();
    #endregion
		
		public Question()
		{
			this._YesNoAnswers = new EntitySet<YesNoAnswer>(new Action<YesNoAnswer>(this.attach_YesNoAnswers), new Action<YesNoAnswer>(this.detach_YesNoAnswers));
			this._MultipleChoiceAnswers = new EntitySet<MultipleChoiceAnswer>(new Action<MultipleChoiceAnswer>(this.attach_MultipleChoiceAnswers), new Action<MultipleChoiceAnswer>(this.detach_MultipleChoiceAnswers));
			this._MultipleChoiceQuestionInfos = new EntitySet<MultipleChoiceQuestionInfo>(new Action<MultipleChoiceQuestionInfo>(this.attach_MultipleChoiceQuestionInfos), new Action<MultipleChoiceQuestionInfo>(this.detach_MultipleChoiceQuestionInfos));
			this._NumericAnswers = new EntitySet<NumericAnswer>(new Action<NumericAnswer>(this.attach_NumericAnswers), new Action<NumericAnswer>(this.detach_NumericAnswers));
			this._NumericQuestionInfo = default(EntityRef<NumericQuestionInfo>);
			this._TextAnswers = new EntitySet<TextAnswer>(new Action<TextAnswer>(this.attach_TextAnswers), new Action<TextAnswer>(this.detach_TextAnswers));
			this._TextQuestionInfo = default(EntityRef<TextQuestionInfo>);
			this._QuestionGroup = default(EntityRef<QuestionGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionGroupID", DbType="Int NOT NULL")]
		public int QuestionGroupID
		{
			get
			{
				return this._QuestionGroupID;
			}
			set
			{
				if ((this._QuestionGroupID != value))
				{
					if (this._QuestionGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionGroupIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionGroupID = value;
					this.SendPropertyChanged("QuestionGroupID");
					this.OnQuestionGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTypeID", DbType="Int NOT NULL")]
		public int QuestionTypeID
		{
			get
			{
				return this._QuestionTypeID;
			}
			set
			{
				if ((this._QuestionTypeID != value))
				{
					this.OnQuestionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionTypeID = value;
					this.SendPropertyChanged("QuestionTypeID");
					this.OnQuestionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Help", DbType="NVarChar(2048) NOT NULL", CanBeNull=false)]
		public string Help
		{
			get
			{
				return this._Help;
			}
			set
			{
				if ((this._Help != value))
				{
					this.OnHelpChanging(value);
					this.SendPropertyChanging();
					this._Help = value;
					this.SendPropertyChanged("Help");
					this.OnHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VarChar(MAX)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCalculated", DbType="Bit NOT NULL")]
		public bool IsCalculated
		{
			get
			{
				return this._IsCalculated;
			}
			set
			{
				if ((this._IsCalculated != value))
				{
					this.OnIsCalculatedChanging(value);
					this.SendPropertyChanging();
					this._IsCalculated = value;
					this.SendPropertyChanged("IsCalculated");
					this.OnIsCalculatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indent", DbType="Int NOT NULL")]
		public int Indent
		{
			get
			{
				return this._Indent;
			}
			set
			{
				if ((this._Indent != value))
				{
					this.OnIndentChanging(value);
					this.SendPropertyChanging();
					this._Indent = value;
					this.SendPropertyChanged("Indent");
					this.OnIndentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MirrorID", DbType="Int")]
		public System.Nullable<int> MirrorID
		{
			get
			{
				return this._MirrorID;
			}
			set
			{
				if ((this._MirrorID != value))
				{
					this.OnMirrorIDChanging(value);
					this.SendPropertyChanging();
					this._MirrorID = value;
					this.SendPropertyChanged("MirrorID");
					this.OnMirrorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checksum", DbType="VarChar(200)")]
		public string Checksum
		{
			get
			{
				return this._Checksum;
			}
			set
			{
				if ((this._Checksum != value))
				{
					this.OnChecksumChanging(value);
					this.SendPropertyChanging();
					this._Checksum = value;
					this.SendPropertyChanged("Checksum");
					this.OnChecksumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChooseMany", DbType="Bit NOT NULL")]
		public bool ChooseMany
		{
			get
			{
				return this._ChooseMany;
			}
			set
			{
				if ((this._ChooseMany != value))
				{
					this.OnChooseManyChanging(value);
					this.SendPropertyChanging();
					this._ChooseMany = value;
					this.SendPropertyChanged("ChooseMany");
					this.OnChooseManyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumForYtd", DbType="Bit NOT NULL")]
		public bool SumForYtd
		{
			get
			{
				return this._SumForYtd;
			}
			set
			{
				if ((this._SumForYtd != value))
				{
					this.OnSumForYtdChanging(value);
					this.SendPropertyChanging();
					this._SumForYtd = value;
					this.SendPropertyChanged("SumForYtd");
					this.OnSumForYtdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChecksumLabel", DbType="VarChar(200)")]
		public string ChecksumLabel
		{
			get
			{
				return this._ChecksumLabel;
			}
			set
			{
				if ((this._ChecksumLabel != value))
				{
					this.OnChecksumLabelChanging(value);
					this.SendPropertyChanging();
					this._ChecksumLabel = value;
					this.SendPropertyChanged("ChecksumLabel");
					this.OnChecksumLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgnoreZero", DbType="Bit NOT NULL")]
		public bool IgnoreZero
		{
			get
			{
				return this._IgnoreZero;
			}
			set
			{
				if ((this._IgnoreZero != value))
				{
					this.OnIgnoreZeroChanging(value);
					this.SendPropertyChanging();
					this._IgnoreZero = value;
					this.SendPropertyChanged("IgnoreZero");
					this.OnIgnoreZeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMirrorEditable", DbType="Bit NOT NULL")]
		public bool IsMirrorEditable
		{
			get
			{
				return this._IsMirrorEditable;
			}
			set
			{
				if ((this._IsMirrorEditable != value))
				{
					this.OnIsMirrorEditableChanging(value);
					this.SendPropertyChanging();
					this._IsMirrorEditable = value;
					this.SendPropertyChanged("IsMirrorEditable");
					this.OnIsMirrorEditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLongAnswer", DbType="Bit NOT NULL")]
		public bool IsLongAnswer
		{
			get
			{
				return this._IsLongAnswer;
			}
			set
			{
				if ((this._IsLongAnswer != value))
				{
					this.OnIsLongAnswerChanging(value);
					this.SendPropertyChanging();
					this._IsLongAnswer = value;
					this.SendPropertyChanged("IsLongAnswer");
					this.OnIsLongAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowPopupChart", DbType="Bit NOT NULL")]
		public bool ShowPopupChart
		{
			get
			{
				return this._ShowPopupChart;
			}
			set
			{
				if ((this._ShowPopupChart != value))
				{
					this.OnShowPopupChartChanging(value);
					this.SendPropertyChanging();
					this._ShowPopupChart = value;
					this.SendPropertyChanged("ShowPopupChart");
					this.OnShowPopupChartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMirrorOverride", DbType="Bit NOT NULL")]
		public bool IsMirrorOverride
		{
			get
			{
				return this._IsMirrorOverride;
			}
			set
			{
				if ((this._IsMirrorOverride != value))
				{
					this.OnIsMirrorOverrideChanging(value);
					this.SendPropertyChanging();
					this._IsMirrorOverride = value;
					this.SendPropertyChanged("IsMirrorOverride");
					this.OnIsMirrorOverrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_YesNoAnswer", Storage="_YesNoAnswers", ThisKey="QuestionID", OtherKey="QuestionID")]
		public EntitySet<YesNoAnswer> YesNoAnswers
		{
			get
			{
				return this._YesNoAnswers;
			}
			set
			{
				this._YesNoAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_MultipleChoiceAnswer", Storage="_MultipleChoiceAnswers", ThisKey="QuestionID", OtherKey="QuestionID")]
		public EntitySet<MultipleChoiceAnswer> MultipleChoiceAnswers
		{
			get
			{
				return this._MultipleChoiceAnswers;
			}
			set
			{
				this._MultipleChoiceAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_MultipleChoiceQuestionInfo", Storage="_MultipleChoiceQuestionInfos", ThisKey="QuestionID", OtherKey="QuestionID")]
		public EntitySet<MultipleChoiceQuestionInfo> MultipleChoiceQuestionInfos
		{
			get
			{
				return this._MultipleChoiceQuestionInfos;
			}
			set
			{
				this._MultipleChoiceQuestionInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_NumericAnswer", Storage="_NumericAnswers", ThisKey="QuestionID", OtherKey="QuestionID")]
		public EntitySet<NumericAnswer> NumericAnswers
		{
			get
			{
				return this._NumericAnswers;
			}
			set
			{
				this._NumericAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_NumericQuestionInfo", Storage="_NumericQuestionInfo", ThisKey="QuestionID", OtherKey="QuestionID", IsUnique=true, IsForeignKey=false)]
		public NumericQuestionInfo NumericQuestionInfo
		{
			get
			{
				return this._NumericQuestionInfo.Entity;
			}
			set
			{
				NumericQuestionInfo previousValue = this._NumericQuestionInfo.Entity;
				if (((previousValue != value) 
							|| (this._NumericQuestionInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NumericQuestionInfo.Entity = null;
						previousValue.Question = null;
					}
					this._NumericQuestionInfo.Entity = value;
					if ((value != null))
					{
						value.Question = this;
					}
					this.SendPropertyChanged("NumericQuestionInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_TextAnswer", Storage="_TextAnswers", ThisKey="QuestionID", OtherKey="QuestionID")]
		public EntitySet<TextAnswer> TextAnswers
		{
			get
			{
				return this._TextAnswers;
			}
			set
			{
				this._TextAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_TextQuestionInfo", Storage="_TextQuestionInfo", ThisKey="QuestionID", OtherKey="QuestionID", IsUnique=true, IsForeignKey=false)]
		public TextQuestionInfo TextQuestionInfo
		{
			get
			{
				return this._TextQuestionInfo.Entity;
			}
			set
			{
				TextQuestionInfo previousValue = this._TextQuestionInfo.Entity;
				if (((previousValue != value) 
							|| (this._TextQuestionInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TextQuestionInfo.Entity = null;
						previousValue.Question = null;
					}
					this._TextQuestionInfo.Entity = value;
					if ((value != null))
					{
						value.Question = this;
					}
					this.SendPropertyChanged("TextQuestionInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionGroup_Question", Storage="_QuestionGroup", ThisKey="QuestionGroupID", OtherKey="QuestionGroupID", IsForeignKey=true)]
		public QuestionGroup QuestionGroup
		{
			get
			{
				return this._QuestionGroup.Entity;
			}
			set
			{
				QuestionGroup previousValue = this._QuestionGroup.Entity;
				if (((previousValue != value) 
							|| (this._QuestionGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionGroup.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._QuestionGroup.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._QuestionGroupID = value.QuestionGroupID;
					}
					else
					{
						this._QuestionGroupID = default(int);
					}
					this.SendPropertyChanged("QuestionGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_YesNoAnswers(YesNoAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_YesNoAnswers(YesNoAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
		
		private void attach_MultipleChoiceAnswers(MultipleChoiceAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_MultipleChoiceAnswers(MultipleChoiceAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
		
		private void attach_MultipleChoiceQuestionInfos(MultipleChoiceQuestionInfo entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_MultipleChoiceQuestionInfos(MultipleChoiceQuestionInfo entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
		
		private void attach_NumericAnswers(NumericAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_NumericAnswers(NumericAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
		
		private void attach_TextAnswers(TextAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_TextAnswers(TextAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportPages")]
	public partial class ReportPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportID;
		
		private int _ID;
		
		private string _Name;
		
		private int _Order;
		
		private EntitySet<ReportPageValue> _ReportPageValues;
		
		private EntityRef<Report> _Report;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    #endregion
		
		public ReportPage()
		{
			this._ReportPageValues = new EntitySet<ReportPageValue>(new Action<ReportPageValue>(this.attach_ReportPageValues), new Action<ReportPageValue>(this.detach_ReportPageValues));
			this._Report = default(EntityRef<Report>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					if (this._Report.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportPage_ReportPageValue", Storage="_ReportPageValues", ThisKey="ReportID,ID", OtherKey="ReportID,PageID")]
		public EntitySet<ReportPageValue> ReportPageValues
		{
			get
			{
				return this._ReportPageValues;
			}
			set
			{
				this._ReportPageValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_ReportPage", Storage="_Report", ThisKey="ReportID", OtherKey="ID", IsForeignKey=true)]
		public Report Report
		{
			get
			{
				return this._Report.Entity;
			}
			set
			{
				Report previousValue = this._Report.Entity;
				if (((previousValue != value) 
							|| (this._Report.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report.Entity = null;
						previousValue.ReportPages.Remove(this);
					}
					this._Report.Entity = value;
					if ((value != null))
					{
						value.ReportPages.Add(this);
						this._ReportID = value.ID;
					}
					else
					{
						this._ReportID = default(int);
					}
					this.SendPropertyChanged("Report");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportPageValues(ReportPageValue entity)
		{
			this.SendPropertyChanging();
			entity.ReportPage = this;
		}
		
		private void detach_ReportPageValues(ReportPageValue entity)
		{
			this.SendPropertyChanging();
			entity.ReportPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportPageValues")]
	public partial class ReportPageValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportID;
		
		private int _PageID;
		
		private string _Name;
		
		private string _Value;
		
		private EntityRef<ReportPage> _ReportPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ReportPageValue()
		{
			this._ReportPage = default(EntityRef<ReportPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					if (this._ReportPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._ReportPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportPage_ReportPageValue", Storage="_ReportPage", ThisKey="ReportID,PageID", OtherKey="ReportID,ID", IsForeignKey=true)]
		public ReportPage ReportPage
		{
			get
			{
				return this._ReportPage.Entity;
			}
			set
			{
				ReportPage previousValue = this._ReportPage.Entity;
				if (((previousValue != value) 
							|| (this._ReportPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportPage.Entity = null;
						previousValue.ReportPageValues.Remove(this);
					}
					this._ReportPage.Entity = value;
					if ((value != null))
					{
						value.ReportPageValues.Add(this);
						this._ReportID = value.ReportID;
						this._PageID = value.ID;
					}
					else
					{
						this._ReportID = default(int);
						this._PageID = default(int);
					}
					this.SendPropertyChanged("ReportPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _Order;
		
		private bool _IsVisible;
		
		private bool _IsMonthly;
		
		private byte _Type;
		
		private string _Template;
		
		private string _Icon;
		
		private string _Description;
		
		private EntitySet<ReportPage> _ReportPages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnIsMonthlyChanging(bool value);
    partial void OnIsMonthlyChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Report()
		{
			this._ReportPages = new EntitySet<ReportPage>(new Action<ReportPage>(this.attach_ReportPages), new Action<ReportPage>(this.detach_ReportPages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMonthly", DbType="Bit NOT NULL")]
		public bool IsMonthly
		{
			get
			{
				return this._IsMonthly;
			}
			set
			{
				if ((this._IsMonthly != value))
				{
					this.OnIsMonthlyChanging(value);
					this.SendPropertyChanging();
					this._IsMonthly = value;
					this.SendPropertyChanged("IsMonthly");
					this.OnIsMonthlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="VarChar(128)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="VarChar(128)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1024)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_ReportPage", Storage="_ReportPages", ThisKey="ID", OtherKey="ReportID")]
		public EntitySet<ReportPage> ReportPages
		{
			get
			{
				return this._ReportPages;
			}
			set
			{
				this._ReportPages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportPages(ReportPage entity)
		{
			this.SendPropertyChanging();
			entity.Report = this;
		}
		
		private void detach_ReportPages(ReportPage entity)
		{
			this.SendPropertyChanging();
			entity.Report = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _Name;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecretAnswers")]
	public partial class SecretAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SecretAnswerID;
		
		private int _SecretQuestionID;
		
		private int _UserID;
		
		private string _Text;
		
		private EntityRef<SecretQuestion> _SecretQuestion;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecretAnswerIDChanging(int value);
    partial void OnSecretAnswerIDChanged();
    partial void OnSecretQuestionIDChanging(int value);
    partial void OnSecretQuestionIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public SecretAnswer()
		{
			this._SecretQuestion = default(EntityRef<SecretQuestion>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretAnswerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SecretAnswerID
		{
			get
			{
				return this._SecretAnswerID;
			}
			set
			{
				if ((this._SecretAnswerID != value))
				{
					this.OnSecretAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._SecretAnswerID = value;
					this.SendPropertyChanged("SecretAnswerID");
					this.OnSecretAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretQuestionID", DbType="Int NOT NULL")]
		public int SecretQuestionID
		{
			get
			{
				return this._SecretQuestionID;
			}
			set
			{
				if ((this._SecretQuestionID != value))
				{
					if (this._SecretQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecretQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._SecretQuestionID = value;
					this.SendPropertyChanged("SecretQuestionID");
					this.OnSecretQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecretQuestion_SecretAnswer", Storage="_SecretQuestion", ThisKey="SecretQuestionID", OtherKey="SecretQuestionID", IsForeignKey=true)]
		public SecretQuestion SecretQuestion
		{
			get
			{
				return this._SecretQuestion.Entity;
			}
			set
			{
				SecretQuestion previousValue = this._SecretQuestion.Entity;
				if (((previousValue != value) 
							|| (this._SecretQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecretQuestion.Entity = null;
						previousValue.SecretAnswers.Remove(this);
					}
					this._SecretQuestion.Entity = value;
					if ((value != null))
					{
						value.SecretAnswers.Add(this);
						this._SecretQuestionID = value.SecretQuestionID;
					}
					else
					{
						this._SecretQuestionID = default(int);
					}
					this.SendPropertyChanged("SecretQuestion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SecretAnswer", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SecretAnswers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SecretAnswers.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecretQuestions")]
	public partial class SecretQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SecretQuestionID;
		
		private string _Text;
		
		private bool _IsCustom;
		
		private EntitySet<SecretAnswer> _SecretAnswers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecretQuestionIDChanging(int value);
    partial void OnSecretQuestionIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnIsCustomChanging(bool value);
    partial void OnIsCustomChanged();
    #endregion
		
		public SecretQuestion()
		{
			this._SecretAnswers = new EntitySet<SecretAnswer>(new Action<SecretAnswer>(this.attach_SecretAnswers), new Action<SecretAnswer>(this.detach_SecretAnswers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretQuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SecretQuestionID
		{
			get
			{
				return this._SecretQuestionID;
			}
			set
			{
				if ((this._SecretQuestionID != value))
				{
					this.OnSecretQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._SecretQuestionID = value;
					this.SendPropertyChanged("SecretQuestionID");
					this.OnSecretQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCustom", DbType="Bit NOT NULL")]
		public bool IsCustom
		{
			get
			{
				return this._IsCustom;
			}
			set
			{
				if ((this._IsCustom != value))
				{
					this.OnIsCustomChanging(value);
					this.SendPropertyChanging();
					this._IsCustom = value;
					this.SendPropertyChanged("IsCustom");
					this.OnIsCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecretQuestion_SecretAnswer", Storage="_SecretAnswers", ThisKey="SecretQuestionID", OtherKey="SecretQuestionID")]
		public EntitySet<SecretAnswer> SecretAnswers
		{
			get
			{
				return this._SecretAnswers;
			}
			set
			{
				this._SecretAnswers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecretAnswers(SecretAnswer entity)
		{
			this.SendPropertyChanging();
			entity.SecretQuestion = this;
		}
		
		private void detach_SecretAnswers(SecretAnswer entity)
		{
			this.SendPropertyChanging();
			entity.SecretQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Skus")]
	public partial class Skus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _ClubTypeID;
		
		private int _AccountType;
		
		private decimal _Price;
		
		private short _Duration;
		
		private string _UpgradeUrl;
		
		private string _RenewalUrl;
		
		private string _PrerequisiteSkuList;
		
		private string _ReceiptDescription;
		
		private bool _DataEntryDenied;
		
		private bool _CompareAccessDenied;
		
		private bool _ReportAccessDenied;
		
		private bool _ShowMonthly;
		
		private bool _NoProgressRequired;
		
		private string _Validator;
		
		private bool _ResetStartDate;
		
		private bool _SendExpirationEmail;
		
		private System.Nullable<int> _DaysBeforeExpiration;
		
		private string _ExpiringUrl;
		
		private bool _SendExpiringEmail;
		
		private bool _Recur;
		
		private System.Nullable<decimal> _RecurPrice;
		
		private System.Nullable<int> _RecurAfter;
		
		private byte _RecurAfterUnits;
		
		private System.Nullable<int> _RecurInterval;
		
		private byte _RecurIntervalUnits;
		
		private System.Nullable<int> _RecurTotalCount;
		
		private System.Nullable<int> _RecurIntroPeriod;
		
		private System.Nullable<decimal> _RecurIntroPrice;
		
		private System.Nullable<int> _RecurSuspendPolicy;
		
		private System.Nullable<int> _EmailTemplate;
		
		private System.Nullable<int> _RenewEmailTemplate;
		
		private System.Nullable<int> _UpgradeEmailTemplate;
		
		private System.Nullable<int> _InviteEmailTemplate;
		
		private System.Nullable<int> _ExpirationEmailTemplate;
		
		private System.Nullable<int> _ExpiringEmailTemplate;
		
		private System.Nullable<int> _RecurReceiptEmailTemplate;
		
		private System.Nullable<int> _SuspendedEmailTemplate;
		
		private System.Nullable<int> _ResetPasswordEmailTemplate;
		
		private System.Nullable<int> _DuplicateAccountEmailTemplate;
		
		private bool _PeerClusterEditDenied;
		
		private System.Nullable<int> _InviteSsoEmailTemplate;
		
		private bool _SendSignupOnFirstUserFirstLogin;
		
		private bool _HidePeerCluster;
		
		private byte _CanClusterNew;
		
		private string _ExclusionNew;
		
		private byte _CanClusterUpgrade;
		
		private string _ExclusionUpgrade;
		
		private bool _DirectInvoice;
		
		private System.Nullable<int> _InviteExistingEmailTemplate;
		
		private string _DataEntryDeniedYears;
		
		private string _CompareAccessDeniedYears;
		
		private string _ReportAccessDeniedYears;
		
		private string _Description;
		
		private System.Nullable<int> _AccountTypeUpgrade;
		
		private EntityRef<ClubType> _ClubType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClubTypeIDChanging(int value);
    partial void OnClubTypeIDChanged();
    partial void OnAccountTypeChanging(int value);
    partial void OnAccountTypeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDurationChanging(short value);
    partial void OnDurationChanged();
    partial void OnUpgradeUrlChanging(string value);
    partial void OnUpgradeUrlChanged();
    partial void OnRenewalUrlChanging(string value);
    partial void OnRenewalUrlChanged();
    partial void OnPrerequisiteSkuListChanging(string value);
    partial void OnPrerequisiteSkuListChanged();
    partial void OnReceiptDescriptionChanging(string value);
    partial void OnReceiptDescriptionChanged();
    partial void OnDataEntryDeniedChanging(bool value);
    partial void OnDataEntryDeniedChanged();
    partial void OnCompareAccessDeniedChanging(bool value);
    partial void OnCompareAccessDeniedChanged();
    partial void OnReportAccessDeniedChanging(bool value);
    partial void OnReportAccessDeniedChanged();
    partial void OnShowMonthlyChanging(bool value);
    partial void OnShowMonthlyChanged();
    partial void OnNoProgressRequiredChanging(bool value);
    partial void OnNoProgressRequiredChanged();
    partial void OnValidatorChanging(string value);
    partial void OnValidatorChanged();
    partial void OnResetStartDateChanging(bool value);
    partial void OnResetStartDateChanged();
    partial void OnSendExpirationEmailChanging(bool value);
    partial void OnSendExpirationEmailChanged();
    partial void OnDaysBeforeExpirationChanging(System.Nullable<int> value);
    partial void OnDaysBeforeExpirationChanged();
    partial void OnExpiringUrlChanging(string value);
    partial void OnExpiringUrlChanged();
    partial void OnSendExpiringEmailChanging(bool value);
    partial void OnSendExpiringEmailChanged();
    partial void OnRecurChanging(bool value);
    partial void OnRecurChanged();
    partial void OnRecurPriceChanging(System.Nullable<decimal> value);
    partial void OnRecurPriceChanged();
    partial void OnRecurAfterChanging(System.Nullable<int> value);
    partial void OnRecurAfterChanged();
    partial void OnRecurAfterUnitsChanging(byte value);
    partial void OnRecurAfterUnitsChanged();
    partial void OnRecurIntervalChanging(System.Nullable<int> value);
    partial void OnRecurIntervalChanged();
    partial void OnRecurIntervalUnitsChanging(byte value);
    partial void OnRecurIntervalUnitsChanged();
    partial void OnRecurTotalCountChanging(System.Nullable<int> value);
    partial void OnRecurTotalCountChanged();
    partial void OnRecurIntroPeriodChanging(System.Nullable<int> value);
    partial void OnRecurIntroPeriodChanged();
    partial void OnRecurIntroPriceChanging(System.Nullable<decimal> value);
    partial void OnRecurIntroPriceChanged();
    partial void OnRecurSuspendPolicyChanging(System.Nullable<int> value);
    partial void OnRecurSuspendPolicyChanged();
    partial void OnEmailTemplateChanging(System.Nullable<int> value);
    partial void OnEmailTemplateChanged();
    partial void OnRenewEmailTemplateChanging(System.Nullable<int> value);
    partial void OnRenewEmailTemplateChanged();
    partial void OnUpgradeEmailTemplateChanging(System.Nullable<int> value);
    partial void OnUpgradeEmailTemplateChanged();
    partial void OnInviteEmailTemplateChanging(System.Nullable<int> value);
    partial void OnInviteEmailTemplateChanged();
    partial void OnExpirationEmailTemplateChanging(System.Nullable<int> value);
    partial void OnExpirationEmailTemplateChanged();
    partial void OnExpiringEmailTemplateChanging(System.Nullable<int> value);
    partial void OnExpiringEmailTemplateChanged();
    partial void OnRecurReceiptEmailTemplateChanging(System.Nullable<int> value);
    partial void OnRecurReceiptEmailTemplateChanged();
    partial void OnSuspendedEmailTemplateChanging(System.Nullable<int> value);
    partial void OnSuspendedEmailTemplateChanged();
    partial void OnResetPasswordEmailTemplateChanging(System.Nullable<int> value);
    partial void OnResetPasswordEmailTemplateChanged();
    partial void OnDuplicateAccountEmailTemplateChanging(System.Nullable<int> value);
    partial void OnDuplicateAccountEmailTemplateChanged();
    partial void OnPeerClusterEditDeniedChanging(bool value);
    partial void OnPeerClusterEditDeniedChanged();
    partial void OnInviteSsoEmailTemplateChanging(System.Nullable<int> value);
    partial void OnInviteSsoEmailTemplateChanged();
    partial void OnSendSignupOnFirstUserFirstLoginChanging(bool value);
    partial void OnSendSignupOnFirstUserFirstLoginChanged();
    partial void OnHidePeerClusterChanging(bool value);
    partial void OnHidePeerClusterChanged();
    partial void OnCanClusterNewChanging(byte value);
    partial void OnCanClusterNewChanged();
    partial void OnExclusionNewChanging(string value);
    partial void OnExclusionNewChanged();
    partial void OnCanClusterUpgradeChanging(byte value);
    partial void OnCanClusterUpgradeChanged();
    partial void OnExclusionUpgradeChanging(string value);
    partial void OnExclusionUpgradeChanged();
    partial void OnDirectInvoiceChanging(bool value);
    partial void OnDirectInvoiceChanged();
    partial void OnInviteExistingEmailTemplateChanging(System.Nullable<int> value);
    partial void OnInviteExistingEmailTemplateChanged();
    partial void OnDataEntryDeniedYearsChanging(string value);
    partial void OnDataEntryDeniedYearsChanged();
    partial void OnCompareAccessDeniedYearsChanging(string value);
    partial void OnCompareAccessDeniedYearsChanged();
    partial void OnReportAccessDeniedYearsChanging(string value);
    partial void OnReportAccessDeniedYearsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAccountTypeUpgradeChanging(System.Nullable<int> value);
    partial void OnAccountTypeUpgradeChanged();
    #endregion
		
		public Skus()
		{
			this._ClubType = default(EntityRef<ClubType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubTypeID", DbType="Int NOT NULL")]
		public int ClubTypeID
		{
			get
			{
				return this._ClubTypeID;
			}
			set
			{
				if ((this._ClubTypeID != value))
				{
					if (this._ClubType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ClubTypeID = value;
					this.SendPropertyChanged("ClubTypeID");
					this.OnClubTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="Int NOT NULL")]
		public int AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="SmallInt NOT NULL")]
		public short Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeUrl", DbType="VarChar(256)")]
		public string UpgradeUrl
		{
			get
			{
				return this._UpgradeUrl;
			}
			set
			{
				if ((this._UpgradeUrl != value))
				{
					this.OnUpgradeUrlChanging(value);
					this.SendPropertyChanging();
					this._UpgradeUrl = value;
					this.SendPropertyChanged("UpgradeUrl");
					this.OnUpgradeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewalUrl", DbType="VarChar(256)")]
		public string RenewalUrl
		{
			get
			{
				return this._RenewalUrl;
			}
			set
			{
				if ((this._RenewalUrl != value))
				{
					this.OnRenewalUrlChanging(value);
					this.SendPropertyChanging();
					this._RenewalUrl = value;
					this.SendPropertyChanged("RenewalUrl");
					this.OnRenewalUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrerequisiteSkuList", DbType="VarChar(256)")]
		public string PrerequisiteSkuList
		{
			get
			{
				return this._PrerequisiteSkuList;
			}
			set
			{
				if ((this._PrerequisiteSkuList != value))
				{
					this.OnPrerequisiteSkuListChanging(value);
					this.SendPropertyChanging();
					this._PrerequisiteSkuList = value;
					this.SendPropertyChanged("PrerequisiteSkuList");
					this.OnPrerequisiteSkuListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDescription", DbType="VarChar(256)")]
		public string ReceiptDescription
		{
			get
			{
				return this._ReceiptDescription;
			}
			set
			{
				if ((this._ReceiptDescription != value))
				{
					this.OnReceiptDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDescription = value;
					this.SendPropertyChanged("ReceiptDescription");
					this.OnReceiptDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataEntryDenied", DbType="Bit NOT NULL")]
		public bool DataEntryDenied
		{
			get
			{
				return this._DataEntryDenied;
			}
			set
			{
				if ((this._DataEntryDenied != value))
				{
					this.OnDataEntryDeniedChanging(value);
					this.SendPropertyChanging();
					this._DataEntryDenied = value;
					this.SendPropertyChanged("DataEntryDenied");
					this.OnDataEntryDeniedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareAccessDenied", DbType="Bit NOT NULL")]
		public bool CompareAccessDenied
		{
			get
			{
				return this._CompareAccessDenied;
			}
			set
			{
				if ((this._CompareAccessDenied != value))
				{
					this.OnCompareAccessDeniedChanging(value);
					this.SendPropertyChanging();
					this._CompareAccessDenied = value;
					this.SendPropertyChanged("CompareAccessDenied");
					this.OnCompareAccessDeniedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportAccessDenied", DbType="Bit NOT NULL")]
		public bool ReportAccessDenied
		{
			get
			{
				return this._ReportAccessDenied;
			}
			set
			{
				if ((this._ReportAccessDenied != value))
				{
					this.OnReportAccessDeniedChanging(value);
					this.SendPropertyChanging();
					this._ReportAccessDenied = value;
					this.SendPropertyChanged("ReportAccessDenied");
					this.OnReportAccessDeniedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowMonthly", DbType="Bit NOT NULL")]
		public bool ShowMonthly
		{
			get
			{
				return this._ShowMonthly;
			}
			set
			{
				if ((this._ShowMonthly != value))
				{
					this.OnShowMonthlyChanging(value);
					this.SendPropertyChanging();
					this._ShowMonthly = value;
					this.SendPropertyChanged("ShowMonthly");
					this.OnShowMonthlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoProgressRequired", DbType="Bit NOT NULL")]
		public bool NoProgressRequired
		{
			get
			{
				return this._NoProgressRequired;
			}
			set
			{
				if ((this._NoProgressRequired != value))
				{
					this.OnNoProgressRequiredChanging(value);
					this.SendPropertyChanging();
					this._NoProgressRequired = value;
					this.SendPropertyChanged("NoProgressRequired");
					this.OnNoProgressRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validator", DbType="VarChar(128)")]
		public string Validator
		{
			get
			{
				return this._Validator;
			}
			set
			{
				if ((this._Validator != value))
				{
					this.OnValidatorChanging(value);
					this.SendPropertyChanging();
					this._Validator = value;
					this.SendPropertyChanged("Validator");
					this.OnValidatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetStartDate", DbType="Bit NOT NULL")]
		public bool ResetStartDate
		{
			get
			{
				return this._ResetStartDate;
			}
			set
			{
				if ((this._ResetStartDate != value))
				{
					this.OnResetStartDateChanging(value);
					this.SendPropertyChanging();
					this._ResetStartDate = value;
					this.SendPropertyChanged("ResetStartDate");
					this.OnResetStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendExpirationEmail", DbType="Bit NOT NULL")]
		public bool SendExpirationEmail
		{
			get
			{
				return this._SendExpirationEmail;
			}
			set
			{
				if ((this._SendExpirationEmail != value))
				{
					this.OnSendExpirationEmailChanging(value);
					this.SendPropertyChanging();
					this._SendExpirationEmail = value;
					this.SendPropertyChanged("SendExpirationEmail");
					this.OnSendExpirationEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysBeforeExpiration", DbType="Int")]
		public System.Nullable<int> DaysBeforeExpiration
		{
			get
			{
				return this._DaysBeforeExpiration;
			}
			set
			{
				if ((this._DaysBeforeExpiration != value))
				{
					this.OnDaysBeforeExpirationChanging(value);
					this.SendPropertyChanging();
					this._DaysBeforeExpiration = value;
					this.SendPropertyChanged("DaysBeforeExpiration");
					this.OnDaysBeforeExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiringUrl", DbType="VarChar(256)")]
		public string ExpiringUrl
		{
			get
			{
				return this._ExpiringUrl;
			}
			set
			{
				if ((this._ExpiringUrl != value))
				{
					this.OnExpiringUrlChanging(value);
					this.SendPropertyChanging();
					this._ExpiringUrl = value;
					this.SendPropertyChanged("ExpiringUrl");
					this.OnExpiringUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendExpiringEmail", DbType="Bit NOT NULL")]
		public bool SendExpiringEmail
		{
			get
			{
				return this._SendExpiringEmail;
			}
			set
			{
				if ((this._SendExpiringEmail != value))
				{
					this.OnSendExpiringEmailChanging(value);
					this.SendPropertyChanging();
					this._SendExpiringEmail = value;
					this.SendPropertyChanged("SendExpiringEmail");
					this.OnSendExpiringEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recur", DbType="Bit NOT NULL")]
		public bool Recur
		{
			get
			{
				return this._Recur;
			}
			set
			{
				if ((this._Recur != value))
				{
					this.OnRecurChanging(value);
					this.SendPropertyChanging();
					this._Recur = value;
					this.SendPropertyChanged("Recur");
					this.OnRecurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurPrice", DbType="Money")]
		public System.Nullable<decimal> RecurPrice
		{
			get
			{
				return this._RecurPrice;
			}
			set
			{
				if ((this._RecurPrice != value))
				{
					this.OnRecurPriceChanging(value);
					this.SendPropertyChanging();
					this._RecurPrice = value;
					this.SendPropertyChanged("RecurPrice");
					this.OnRecurPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurAfter", DbType="Int")]
		public System.Nullable<int> RecurAfter
		{
			get
			{
				return this._RecurAfter;
			}
			set
			{
				if ((this._RecurAfter != value))
				{
					this.OnRecurAfterChanging(value);
					this.SendPropertyChanging();
					this._RecurAfter = value;
					this.SendPropertyChanged("RecurAfter");
					this.OnRecurAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurAfterUnits", DbType="TinyInt NOT NULL")]
		public byte RecurAfterUnits
		{
			get
			{
				return this._RecurAfterUnits;
			}
			set
			{
				if ((this._RecurAfterUnits != value))
				{
					this.OnRecurAfterUnitsChanging(value);
					this.SendPropertyChanging();
					this._RecurAfterUnits = value;
					this.SendPropertyChanged("RecurAfterUnits");
					this.OnRecurAfterUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurInterval", DbType="Int")]
		public System.Nullable<int> RecurInterval
		{
			get
			{
				return this._RecurInterval;
			}
			set
			{
				if ((this._RecurInterval != value))
				{
					this.OnRecurIntervalChanging(value);
					this.SendPropertyChanging();
					this._RecurInterval = value;
					this.SendPropertyChanged("RecurInterval");
					this.OnRecurIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurIntervalUnits", DbType="TinyInt NOT NULL")]
		public byte RecurIntervalUnits
		{
			get
			{
				return this._RecurIntervalUnits;
			}
			set
			{
				if ((this._RecurIntervalUnits != value))
				{
					this.OnRecurIntervalUnitsChanging(value);
					this.SendPropertyChanging();
					this._RecurIntervalUnits = value;
					this.SendPropertyChanged("RecurIntervalUnits");
					this.OnRecurIntervalUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurTotalCount", DbType="Int")]
		public System.Nullable<int> RecurTotalCount
		{
			get
			{
				return this._RecurTotalCount;
			}
			set
			{
				if ((this._RecurTotalCount != value))
				{
					this.OnRecurTotalCountChanging(value);
					this.SendPropertyChanging();
					this._RecurTotalCount = value;
					this.SendPropertyChanged("RecurTotalCount");
					this.OnRecurTotalCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurIntroPeriod", DbType="Int")]
		public System.Nullable<int> RecurIntroPeriod
		{
			get
			{
				return this._RecurIntroPeriod;
			}
			set
			{
				if ((this._RecurIntroPeriod != value))
				{
					this.OnRecurIntroPeriodChanging(value);
					this.SendPropertyChanging();
					this._RecurIntroPeriod = value;
					this.SendPropertyChanged("RecurIntroPeriod");
					this.OnRecurIntroPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurIntroPrice", DbType="Money")]
		public System.Nullable<decimal> RecurIntroPrice
		{
			get
			{
				return this._RecurIntroPrice;
			}
			set
			{
				if ((this._RecurIntroPrice != value))
				{
					this.OnRecurIntroPriceChanging(value);
					this.SendPropertyChanging();
					this._RecurIntroPrice = value;
					this.SendPropertyChanged("RecurIntroPrice");
					this.OnRecurIntroPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurSuspendPolicy", DbType="Int")]
		public System.Nullable<int> RecurSuspendPolicy
		{
			get
			{
				return this._RecurSuspendPolicy;
			}
			set
			{
				if ((this._RecurSuspendPolicy != value))
				{
					this.OnRecurSuspendPolicyChanging(value);
					this.SendPropertyChanging();
					this._RecurSuspendPolicy = value;
					this.SendPropertyChanged("RecurSuspendPolicy");
					this.OnRecurSuspendPolicyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailTemplate", DbType="Int")]
		public System.Nullable<int> EmailTemplate
		{
			get
			{
				return this._EmailTemplate;
			}
			set
			{
				if ((this._EmailTemplate != value))
				{
					this.OnEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._EmailTemplate = value;
					this.SendPropertyChanged("EmailTemplate");
					this.OnEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewEmailTemplate", DbType="Int")]
		public System.Nullable<int> RenewEmailTemplate
		{
			get
			{
				return this._RenewEmailTemplate;
			}
			set
			{
				if ((this._RenewEmailTemplate != value))
				{
					this.OnRenewEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._RenewEmailTemplate = value;
					this.SendPropertyChanged("RenewEmailTemplate");
					this.OnRenewEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeEmailTemplate", DbType="Int")]
		public System.Nullable<int> UpgradeEmailTemplate
		{
			get
			{
				return this._UpgradeEmailTemplate;
			}
			set
			{
				if ((this._UpgradeEmailTemplate != value))
				{
					this.OnUpgradeEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._UpgradeEmailTemplate = value;
					this.SendPropertyChanged("UpgradeEmailTemplate");
					this.OnUpgradeEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InviteEmailTemplate", DbType="Int")]
		public System.Nullable<int> InviteEmailTemplate
		{
			get
			{
				return this._InviteEmailTemplate;
			}
			set
			{
				if ((this._InviteEmailTemplate != value))
				{
					this.OnInviteEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._InviteEmailTemplate = value;
					this.SendPropertyChanged("InviteEmailTemplate");
					this.OnInviteEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationEmailTemplate", DbType="Int")]
		public System.Nullable<int> ExpirationEmailTemplate
		{
			get
			{
				return this._ExpirationEmailTemplate;
			}
			set
			{
				if ((this._ExpirationEmailTemplate != value))
				{
					this.OnExpirationEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationEmailTemplate = value;
					this.SendPropertyChanged("ExpirationEmailTemplate");
					this.OnExpirationEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiringEmailTemplate", DbType="Int")]
		public System.Nullable<int> ExpiringEmailTemplate
		{
			get
			{
				return this._ExpiringEmailTemplate;
			}
			set
			{
				if ((this._ExpiringEmailTemplate != value))
				{
					this.OnExpiringEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._ExpiringEmailTemplate = value;
					this.SendPropertyChanged("ExpiringEmailTemplate");
					this.OnExpiringEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurReceiptEmailTemplate", DbType="Int")]
		public System.Nullable<int> RecurReceiptEmailTemplate
		{
			get
			{
				return this._RecurReceiptEmailTemplate;
			}
			set
			{
				if ((this._RecurReceiptEmailTemplate != value))
				{
					this.OnRecurReceiptEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._RecurReceiptEmailTemplate = value;
					this.SendPropertyChanged("RecurReceiptEmailTemplate");
					this.OnRecurReceiptEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuspendedEmailTemplate", DbType="Int")]
		public System.Nullable<int> SuspendedEmailTemplate
		{
			get
			{
				return this._SuspendedEmailTemplate;
			}
			set
			{
				if ((this._SuspendedEmailTemplate != value))
				{
					this.OnSuspendedEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._SuspendedEmailTemplate = value;
					this.SendPropertyChanged("SuspendedEmailTemplate");
					this.OnSuspendedEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetPasswordEmailTemplate", DbType="Int")]
		public System.Nullable<int> ResetPasswordEmailTemplate
		{
			get
			{
				return this._ResetPasswordEmailTemplate;
			}
			set
			{
				if ((this._ResetPasswordEmailTemplate != value))
				{
					this.OnResetPasswordEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._ResetPasswordEmailTemplate = value;
					this.SendPropertyChanged("ResetPasswordEmailTemplate");
					this.OnResetPasswordEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuplicateAccountEmailTemplate", DbType="Int")]
		public System.Nullable<int> DuplicateAccountEmailTemplate
		{
			get
			{
				return this._DuplicateAccountEmailTemplate;
			}
			set
			{
				if ((this._DuplicateAccountEmailTemplate != value))
				{
					this.OnDuplicateAccountEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._DuplicateAccountEmailTemplate = value;
					this.SendPropertyChanged("DuplicateAccountEmailTemplate");
					this.OnDuplicateAccountEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeerClusterEditDenied", DbType="Bit NOT NULL")]
		public bool PeerClusterEditDenied
		{
			get
			{
				return this._PeerClusterEditDenied;
			}
			set
			{
				if ((this._PeerClusterEditDenied != value))
				{
					this.OnPeerClusterEditDeniedChanging(value);
					this.SendPropertyChanging();
					this._PeerClusterEditDenied = value;
					this.SendPropertyChanged("PeerClusterEditDenied");
					this.OnPeerClusterEditDeniedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InviteSsoEmailTemplate", DbType="Int")]
		public System.Nullable<int> InviteSsoEmailTemplate
		{
			get
			{
				return this._InviteSsoEmailTemplate;
			}
			set
			{
				if ((this._InviteSsoEmailTemplate != value))
				{
					this.OnInviteSsoEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._InviteSsoEmailTemplate = value;
					this.SendPropertyChanged("InviteSsoEmailTemplate");
					this.OnInviteSsoEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendSignupOnFirstUserFirstLogin", DbType="Bit NOT NULL")]
		public bool SendSignupOnFirstUserFirstLogin
		{
			get
			{
				return this._SendSignupOnFirstUserFirstLogin;
			}
			set
			{
				if ((this._SendSignupOnFirstUserFirstLogin != value))
				{
					this.OnSendSignupOnFirstUserFirstLoginChanging(value);
					this.SendPropertyChanging();
					this._SendSignupOnFirstUserFirstLogin = value;
					this.SendPropertyChanged("SendSignupOnFirstUserFirstLogin");
					this.OnSendSignupOnFirstUserFirstLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HidePeerCluster", DbType="Bit NOT NULL")]
		public bool HidePeerCluster
		{
			get
			{
				return this._HidePeerCluster;
			}
			set
			{
				if ((this._HidePeerCluster != value))
				{
					this.OnHidePeerClusterChanging(value);
					this.SendPropertyChanging();
					this._HidePeerCluster = value;
					this.SendPropertyChanged("HidePeerCluster");
					this.OnHidePeerClusterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanClusterNew", DbType="TinyInt NOT NULL")]
		public byte CanClusterNew
		{
			get
			{
				return this._CanClusterNew;
			}
			set
			{
				if ((this._CanClusterNew != value))
				{
					this.OnCanClusterNewChanging(value);
					this.SendPropertyChanging();
					this._CanClusterNew = value;
					this.SendPropertyChanged("CanClusterNew");
					this.OnCanClusterNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExclusionNew", DbType="VarChar(256)")]
		public string ExclusionNew
		{
			get
			{
				return this._ExclusionNew;
			}
			set
			{
				if ((this._ExclusionNew != value))
				{
					this.OnExclusionNewChanging(value);
					this.SendPropertyChanging();
					this._ExclusionNew = value;
					this.SendPropertyChanged("ExclusionNew");
					this.OnExclusionNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanClusterUpgrade", DbType="TinyInt NOT NULL")]
		public byte CanClusterUpgrade
		{
			get
			{
				return this._CanClusterUpgrade;
			}
			set
			{
				if ((this._CanClusterUpgrade != value))
				{
					this.OnCanClusterUpgradeChanging(value);
					this.SendPropertyChanging();
					this._CanClusterUpgrade = value;
					this.SendPropertyChanged("CanClusterUpgrade");
					this.OnCanClusterUpgradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExclusionUpgrade", DbType="VarChar(256)")]
		public string ExclusionUpgrade
		{
			get
			{
				return this._ExclusionUpgrade;
			}
			set
			{
				if ((this._ExclusionUpgrade != value))
				{
					this.OnExclusionUpgradeChanging(value);
					this.SendPropertyChanging();
					this._ExclusionUpgrade = value;
					this.SendPropertyChanged("ExclusionUpgrade");
					this.OnExclusionUpgradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectInvoice", DbType="Bit NOT NULL")]
		public bool DirectInvoice
		{
			get
			{
				return this._DirectInvoice;
			}
			set
			{
				if ((this._DirectInvoice != value))
				{
					this.OnDirectInvoiceChanging(value);
					this.SendPropertyChanging();
					this._DirectInvoice = value;
					this.SendPropertyChanged("DirectInvoice");
					this.OnDirectInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InviteExistingEmailTemplate", DbType="Int")]
		public System.Nullable<int> InviteExistingEmailTemplate
		{
			get
			{
				return this._InviteExistingEmailTemplate;
			}
			set
			{
				if ((this._InviteExistingEmailTemplate != value))
				{
					this.OnInviteExistingEmailTemplateChanging(value);
					this.SendPropertyChanging();
					this._InviteExistingEmailTemplate = value;
					this.SendPropertyChanged("InviteExistingEmailTemplate");
					this.OnInviteExistingEmailTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataEntryDeniedYears", DbType="VarChar(512)")]
		public string DataEntryDeniedYears
		{
			get
			{
				return this._DataEntryDeniedYears;
			}
			set
			{
				if ((this._DataEntryDeniedYears != value))
				{
					this.OnDataEntryDeniedYearsChanging(value);
					this.SendPropertyChanging();
					this._DataEntryDeniedYears = value;
					this.SendPropertyChanged("DataEntryDeniedYears");
					this.OnDataEntryDeniedYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompareAccessDeniedYears", DbType="VarChar(512)")]
		public string CompareAccessDeniedYears
		{
			get
			{
				return this._CompareAccessDeniedYears;
			}
			set
			{
				if ((this._CompareAccessDeniedYears != value))
				{
					this.OnCompareAccessDeniedYearsChanging(value);
					this.SendPropertyChanging();
					this._CompareAccessDeniedYears = value;
					this.SendPropertyChanged("CompareAccessDeniedYears");
					this.OnCompareAccessDeniedYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportAccessDeniedYears", DbType="VarChar(512)")]
		public string ReportAccessDeniedYears
		{
			get
			{
				return this._ReportAccessDeniedYears;
			}
			set
			{
				if ((this._ReportAccessDeniedYears != value))
				{
					this.OnReportAccessDeniedYearsChanging(value);
					this.SendPropertyChanging();
					this._ReportAccessDeniedYears = value;
					this.SendPropertyChanged("ReportAccessDeniedYears");
					this.OnReportAccessDeniedYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeUpgrade", DbType="Int")]
		public System.Nullable<int> AccountTypeUpgrade
		{
			get
			{
				return this._AccountTypeUpgrade;
			}
			set
			{
				if ((this._AccountTypeUpgrade != value))
				{
					this.OnAccountTypeUpgradeChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeUpgrade = value;
					this.SendPropertyChanged("AccountTypeUpgrade");
					this.OnAccountTypeUpgradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClubType_Skus", Storage="_ClubType", ThisKey="ClubTypeID", OtherKey="ID", IsForeignKey=true)]
		public ClubType ClubType
		{
			get
			{
				return this._ClubType.Entity;
			}
			set
			{
				ClubType previousValue = this._ClubType.Entity;
				if (((previousValue != value) 
							|| (this._ClubType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClubType.Entity = null;
						previousValue.Skus.Remove(this);
					}
					this._ClubType.Entity = value;
					if ((value != null))
					{
						value.Skus.Add(this);
						this._ClubTypeID = value.ID;
					}
					else
					{
						this._ClubTypeID = default(int);
					}
					this.SendPropertyChanged("ClubType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SsoClubs")]
	public partial class SsoClub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClubID;
		
		private string _SsoID;
		
		private EntityRef<Club> _Club;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnSsoIDChanging(string value);
    partial void OnSsoIDChanged();
    #endregion
		
		public SsoClub()
		{
			this._Club = default(EntityRef<Club>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SsoID", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string SsoID
		{
			get
			{
				return this._SsoID;
			}
			set
			{
				if ((this._SsoID != value))
				{
					this.OnSsoIDChanging(value);
					this.SendPropertyChanging();
					this._SsoID = value;
					this.SendPropertyChanged("SsoID");
					this.OnSsoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_SsoClub", Storage="_Club", ThisKey="ClubID", OtherKey="ClubID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.SsoClub = null;
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.SsoClub = this;
						this._ClubID = value.ClubID;
					}
					else
					{
						this._ClubID = default(int);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SsoUsers")]
	public partial class SsoUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _SsoID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSsoIDChanging(string value);
    partial void OnSsoIDChanged();
    #endregion
		
		public SsoUser()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SsoID", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string SsoID
		{
			get
			{
				return this._SsoID;
			}
			set
			{
				if ((this._SsoID != value))
				{
					this.OnSsoIDChanging(value);
					this.SendPropertyChanging();
					this._SsoID = value;
					this.SendPropertyChanged("SsoID");
					this.OnSsoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SsoUser", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SsoUser = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SsoUser = this;
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private string _Name;
		
		private string _Abbreviation;
		
		private EntitySet<Club> _Clubs;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    #endregion
		
		public State()
		{
			this._Clubs = new EntitySet<Club>(new Action<Club>(this.attach_Clubs), new Action<Club>(this.detach_Clubs));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Club", Storage="_Clubs", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<Club> Clubs
		{
			get
			{
				return this._Clubs;
			}
			set
			{
				this._Clubs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_User", Storage="_Users", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Clubs(Club entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaticReports")]
	public partial class StaticReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportID;
		
		private string _ReportTitle;
		
		private string _Description;
		
		private string _CanDownload;
		
		private string _CanBuy;
		
		private string _PurchaseUrl;
		
		private double _ListPrice;
		
		private bool _ProgressRequired;
		
		private int _ReportFileID;
		
		private int _ThumbFileID;
		
		private bool _IsSalary;
		
		private string _WatermarkText;
		
		private string _WatermarkStyle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnReportTitleChanging(string value);
    partial void OnReportTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCanDownloadChanging(string value);
    partial void OnCanDownloadChanged();
    partial void OnCanBuyChanging(string value);
    partial void OnCanBuyChanged();
    partial void OnPurchaseUrlChanging(string value);
    partial void OnPurchaseUrlChanged();
    partial void OnListPriceChanging(double value);
    partial void OnListPriceChanged();
    partial void OnProgressRequiredChanging(bool value);
    partial void OnProgressRequiredChanged();
    partial void OnReportFileIDChanging(int value);
    partial void OnReportFileIDChanged();
    partial void OnThumbFileIDChanging(int value);
    partial void OnThumbFileIDChanged();
    partial void OnIsSalaryChanging(bool value);
    partial void OnIsSalaryChanged();
    partial void OnWatermarkTextChanging(string value);
    partial void OnWatermarkTextChanged();
    partial void OnWatermarkStyleChanging(string value);
    partial void OnWatermarkStyleChanged();
    #endregion
		
		public StaticReport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ReportTitle
		{
			get
			{
				return this._ReportTitle;
			}
			set
			{
				if ((this._ReportTitle != value))
				{
					this.OnReportTitleChanging(value);
					this.SendPropertyChanging();
					this._ReportTitle = value;
					this.SendPropertyChanged("ReportTitle");
					this.OnReportTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDownload", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string CanDownload
		{
			get
			{
				return this._CanDownload;
			}
			set
			{
				if ((this._CanDownload != value))
				{
					this.OnCanDownloadChanging(value);
					this.SendPropertyChanging();
					this._CanDownload = value;
					this.SendPropertyChanged("CanDownload");
					this.OnCanDownloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBuy", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string CanBuy
		{
			get
			{
				return this._CanBuy;
			}
			set
			{
				if ((this._CanBuy != value))
				{
					this.OnCanBuyChanging(value);
					this.SendPropertyChanging();
					this._CanBuy = value;
					this.SendPropertyChanged("CanBuy");
					this.OnCanBuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseUrl", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string PurchaseUrl
		{
			get
			{
				return this._PurchaseUrl;
			}
			set
			{
				if ((this._PurchaseUrl != value))
				{
					this.OnPurchaseUrlChanging(value);
					this.SendPropertyChanging();
					this._PurchaseUrl = value;
					this.SendPropertyChanged("PurchaseUrl");
					this.OnPurchaseUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Float NOT NULL")]
		public double ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressRequired", DbType="Bit NOT NULL")]
		public bool ProgressRequired
		{
			get
			{
				return this._ProgressRequired;
			}
			set
			{
				if ((this._ProgressRequired != value))
				{
					this.OnProgressRequiredChanging(value);
					this.SendPropertyChanging();
					this._ProgressRequired = value;
					this.SendPropertyChanged("ProgressRequired");
					this.OnProgressRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportFileID", DbType="Int NOT NULL")]
		public int ReportFileID
		{
			get
			{
				return this._ReportFileID;
			}
			set
			{
				if ((this._ReportFileID != value))
				{
					this.OnReportFileIDChanging(value);
					this.SendPropertyChanging();
					this._ReportFileID = value;
					this.SendPropertyChanged("ReportFileID");
					this.OnReportFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbFileID", DbType="Int NOT NULL")]
		public int ThumbFileID
		{
			get
			{
				return this._ThumbFileID;
			}
			set
			{
				if ((this._ThumbFileID != value))
				{
					this.OnThumbFileIDChanging(value);
					this.SendPropertyChanging();
					this._ThumbFileID = value;
					this.SendPropertyChanged("ThumbFileID");
					this.OnThumbFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSalary", DbType="Bit NOT NULL")]
		public bool IsSalary
		{
			get
			{
				return this._IsSalary;
			}
			set
			{
				if ((this._IsSalary != value))
				{
					this.OnIsSalaryChanging(value);
					this.SendPropertyChanging();
					this._IsSalary = value;
					this.SendPropertyChanged("IsSalary");
					this.OnIsSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WatermarkText", DbType="NVarChar(2048)")]
		public string WatermarkText
		{
			get
			{
				return this._WatermarkText;
			}
			set
			{
				if ((this._WatermarkText != value))
				{
					this.OnWatermarkTextChanging(value);
					this.SendPropertyChanging();
					this._WatermarkText = value;
					this.SendPropertyChanged("WatermarkText");
					this.OnWatermarkTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WatermarkStyle", DbType="NVarChar(256)")]
		public string WatermarkStyle
		{
			get
			{
				return this._WatermarkStyle;
			}
			set
			{
				if ((this._WatermarkStyle != value))
				{
					this.OnWatermarkStyleChanging(value);
					this.SendPropertyChanging();
					this._WatermarkStyle = value;
					this.SendPropertyChanged("WatermarkStyle");
					this.OnWatermarkStyleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TextAnswers")]
	public partial class TextAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private int _ClubID;
		
		private short _Year;
		
		private byte _Month;
		
		private string _Answer;
		
		private EntityRef<Club> _Club;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnClubIDChanging(int value);
    partial void OnClubIDChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnMonthChanging(byte value);
    partial void OnMonthChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    #endregion
		
		public TextAnswer()
		{
			this._Club = default(EntityRef<Club>);
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_TextAnswer", Storage="_Club", ThisKey="ClubID", OtherKey="ClubID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.TextAnswers.Remove(this);
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.TextAnswers.Add(this);
						this._ClubID = value.ClubID;
					}
					else
					{
						this._ClubID = default(int);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_TextAnswer", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.TextAnswers.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.TextAnswers.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TextQuestionInfo")]
	public partial class TextQuestionInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private int _Width;
		
		private int _NoOfLines;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnNoOfLinesChanging(int value);
    partial void OnNoOfLinesChanged();
    #endregion
		
		public TextQuestionInfo()
		{
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfLines", DbType="Int NOT NULL")]
		public int NoOfLines
		{
			get
			{
				return this._NoOfLines;
			}
			set
			{
				if ((this._NoOfLines != value))
				{
					this.OnNoOfLinesChanging(value);
					this.SendPropertyChanging();
					this._NoOfLines = value;
					this.SendPropertyChanged("NoOfLines");
					this.OnNoOfLinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_TextQuestionInfo", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.TextQuestionInfo = null;
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.TextQuestionInfo = this;
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private System.Nullable<int> _ClubID;
		
		private int _RoleID;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Password;
		
		private System.Data.Linq.Binary _Salt;
		
		private short _IterationsNumber;
		
		private string _Email;
		
		private string _Address;
		
		private string _City;
		
		private int _StateID;
		
		private string _Zip;
		
		private bool _IsEmailNotified;
		
		private bool _IsActive;
		
		private System.DateTime _DateRegistered;
		
		private int _ClubRoleID;
		
		private bool _SalaryVisible;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsDeleted;
		
		private string _Title;
		
		private string _StateName;
		
		private int _CountryID;
		
		private string _Address2;
		
		private System.Guid _Code;
		
		private bool _IsSSO;
		
		private bool _HasLoggedIn;
		
		private string _AlternateName;
		
		private string _HashInfo;
		
		private System.Nullable<int> _ParentUserID;
		
		private string _SsoToken;
		
		private System.Nullable<System.DateTime> _SsoTokenExp;
		
		private string _ClubTypes;
		
		private bool _BillingContact;
		
		private EntitySet<Log> _Logs;
		
		private EntitySet<SecretAnswer> _SecretAnswers;
		
		private EntityRef<SsoUser> _SsoUser;
		
		private EntityRef<Club> _Club;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnClubIDChanging(System.Nullable<int> value);
    partial void OnClubIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(System.Data.Linq.Binary value);
    partial void OnPasswordChanged();
    partial void OnSaltChanging(System.Data.Linq.Binary value);
    partial void OnSaltChanged();
    partial void OnIterationsNumberChanging(short value);
    partial void OnIterationsNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnIsEmailNotifiedChanging(bool value);
    partial void OnIsEmailNotifiedChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDateRegisteredChanging(System.DateTime value);
    partial void OnDateRegisteredChanged();
    partial void OnClubRoleIDChanging(int value);
    partial void OnClubRoleIDChanged();
    partial void OnSalaryVisibleChanging(bool value);
    partial void OnSalaryVisibleChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCodeChanging(System.Guid value);
    partial void OnCodeChanged();
    partial void OnIsSSOChanging(bool value);
    partial void OnIsSSOChanged();
    partial void OnHasLoggedInChanging(bool value);
    partial void OnHasLoggedInChanged();
    partial void OnAlternateNameChanging(string value);
    partial void OnAlternateNameChanged();
    partial void OnHashInfoChanging(string value);
    partial void OnHashInfoChanged();
    partial void OnParentUserIDChanging(System.Nullable<int> value);
    partial void OnParentUserIDChanged();
    partial void OnSsoTokenChanging(string value);
    partial void OnSsoTokenChanged();
    partial void OnSsoTokenExpChanging(System.Nullable<System.DateTime> value);
    partial void OnSsoTokenExpChanged();
    partial void OnClubTypesChanging(string value);
    partial void OnClubTypesChanged();
    partial void OnBillingContactChanging(bool value);
    partial void OnBillingContactChanged();
    #endregion
		
		public User()
		{
			this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
			this._SecretAnswers = new EntitySet<SecretAnswer>(new Action<SecretAnswer>(this.attach_SecretAnswers), new Action<SecretAnswer>(this.detach_SecretAnswers));
			this._SsoUser = default(EntityRef<SsoUser>);
			this._Club = default(EntityRef<Club>);
			this._Country = default(EntityRef<Country>);
			this._Role = default(EntityRef<Role>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubID", DbType="Int")]
		public System.Nullable<int> ClubID
		{
			get
			{
				return this._ClubID;
			}
			set
			{
				if ((this._ClubID != value))
				{
					if (this._Club.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClubIDChanging(value);
					this.SendPropertyChanging();
					this._ClubID = value;
					this.SendPropertyChanged("ClubID");
					this.OnClubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="Binary(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="Binary(8) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IterationsNumber", DbType="SmallInt NOT NULL")]
		public short IterationsNumber
		{
			get
			{
				return this._IterationsNumber;
			}
			set
			{
				if ((this._IterationsNumber != value))
				{
					this.OnIterationsNumberChanging(value);
					this.SendPropertyChanging();
					this._IterationsNumber = value;
					this.SendPropertyChanged("IterationsNumber");
					this.OnIterationsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailNotified", DbType="Bit NOT NULL")]
		public bool IsEmailNotified
		{
			get
			{
				return this._IsEmailNotified;
			}
			set
			{
				if ((this._IsEmailNotified != value))
				{
					this.OnIsEmailNotifiedChanging(value);
					this.SendPropertyChanging();
					this._IsEmailNotified = value;
					this.SendPropertyChanged("IsEmailNotified");
					this.OnIsEmailNotifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRegistered", DbType="DateTime NOT NULL")]
		public System.DateTime DateRegistered
		{
			get
			{
				return this._DateRegistered;
			}
			set
			{
				if ((this._DateRegistered != value))
				{
					this.OnDateRegisteredChanging(value);
					this.SendPropertyChanging();
					this._DateRegistered = value;
					this.SendPropertyChanged("DateRegistered");
					this.OnDateRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubRoleID", DbType="Int NOT NULL")]
		public int ClubRoleID
		{
			get
			{
				return this._ClubRoleID;
			}
			set
			{
				if ((this._ClubRoleID != value))
				{
					this.OnClubRoleIDChanging(value);
					this.SendPropertyChanging();
					this._ClubRoleID = value;
					this.SendPropertyChanged("ClubRoleID");
					this.OnClubRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryVisible", DbType="Bit NOT NULL")]
		public bool SalaryVisible
		{
			get
			{
				return this._SalaryVisible;
			}
			set
			{
				if ((this._SalaryVisible != value))
				{
					this.OnSalaryVisibleChanging(value);
					this.SendPropertyChanging();
					this._SalaryVisible = value;
					this.SendPropertyChanged("SalaryVisible");
					this.OnSalaryVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(80)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(80)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(256)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(256)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSSO", DbType="Bit NOT NULL")]
		public bool IsSSO
		{
			get
			{
				return this._IsSSO;
			}
			set
			{
				if ((this._IsSSO != value))
				{
					this.OnIsSSOChanging(value);
					this.SendPropertyChanging();
					this._IsSSO = value;
					this.SendPropertyChanged("IsSSO");
					this.OnIsSSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLoggedIn", DbType="Bit NOT NULL")]
		public bool HasLoggedIn
		{
			get
			{
				return this._HasLoggedIn;
			}
			set
			{
				if ((this._HasLoggedIn != value))
				{
					this.OnHasLoggedInChanging(value);
					this.SendPropertyChanging();
					this._HasLoggedIn = value;
					this.SendPropertyChanged("HasLoggedIn");
					this.OnHasLoggedInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateName", DbType="NVarChar(80)")]
		public string AlternateName
		{
			get
			{
				return this._AlternateName;
			}
			set
			{
				if ((this._AlternateName != value))
				{
					this.OnAlternateNameChanging(value);
					this.SendPropertyChanging();
					this._AlternateName = value;
					this.SendPropertyChanged("AlternateName");
					this.OnAlternateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashInfo", DbType="VarChar(512)")]
		public string HashInfo
		{
			get
			{
				return this._HashInfo;
			}
			set
			{
				if ((this._HashInfo != value))
				{
					this.OnHashInfoChanging(value);
					this.SendPropertyChanging();
					this._HashInfo = value;
					this.SendPropertyChanged("HashInfo");
					this.OnHashInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentUserID", DbType="Int")]
		public System.Nullable<int> ParentUserID
		{
			get
			{
				return this._ParentUserID;
			}
			set
			{
				if ((this._ParentUserID != value))
				{
					this.OnParentUserIDChanging(value);
					this.SendPropertyChanging();
					this._ParentUserID = value;
					this.SendPropertyChanged("ParentUserID");
					this.OnParentUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SsoToken", DbType="VarChar(512)")]
		public string SsoToken
		{
			get
			{
				return this._SsoToken;
			}
			set
			{
				if ((this._SsoToken != value))
				{
					this.OnSsoTokenChanging(value);
					this.SendPropertyChanging();
					this._SsoToken = value;
					this.SendPropertyChanged("SsoToken");
					this.OnSsoTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SsoTokenExp", DbType="DateTime")]
		public System.Nullable<System.DateTime> SsoTokenExp
		{
			get
			{
				return this._SsoTokenExp;
			}
			set
			{
				if ((this._SsoTokenExp != value))
				{
					this.OnSsoTokenExpChanging(value);
					this.SendPropertyChanging();
					this._SsoTokenExp = value;
					this.SendPropertyChanged("SsoTokenExp");
					this.OnSsoTokenExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubTypes", DbType="NVarChar(512)")]
		public string ClubTypes
		{
			get
			{
				return this._ClubTypes;
			}
			set
			{
				if ((this._ClubTypes != value))
				{
					this.OnClubTypesChanging(value);
					this.SendPropertyChanging();
					this._ClubTypes = value;
					this.SendPropertyChanged("ClubTypes");
					this.OnClubTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingContact", DbType="Bit NOT NULL")]
		public bool BillingContact
		{
			get
			{
				return this._BillingContact;
			}
			set
			{
				if ((this._BillingContact != value))
				{
					this.OnBillingContactChanging(value);
					this.SendPropertyChanging();
					this._BillingContact = value;
					this.SendPropertyChanged("BillingContact");
					this.OnBillingContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Log", Storage="_Logs", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Log> Logs
		{
			get
			{
				return this._Logs;
			}
			set
			{
				this._Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SecretAnswer", Storage="_SecretAnswers", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<SecretAnswer> SecretAnswers
		{
			get
			{
				return this._SecretAnswers;
			}
			set
			{
				this._SecretAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SsoUser", Storage="_SsoUser", ThisKey="UserID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public SsoUser SsoUser
		{
			get
			{
				return this._SsoUser.Entity;
			}
			set
			{
				SsoUser previousValue = this._SsoUser.Entity;
				if (((previousValue != value) 
							|| (this._SsoUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SsoUser.Entity = null;
						previousValue.User = null;
					}
					this._SsoUser.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("SsoUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Club_User", Storage="_Club", ThisKey="ClubID", OtherKey="ClubID", IsForeignKey=true)]
		public Club Club
		{
			get
			{
				return this._Club.Entity;
			}
			set
			{
				Club previousValue = this._Club.Entity;
				if (((previousValue != value) 
							|| (this._Club.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Club.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Club.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._ClubID = value.ClubID;
					}
					else
					{
						this._ClubID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Club");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_User", Storage="_Country", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_User", Storage="_State", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SecretAnswers(SecretAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SecretAnswers(SecretAnswer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	public partial class GetNormalizedPercentileResult
	{
		
		private double _curr_rank;
		
		private double _next_rank;
		
		private double _prev_rank;
		
		private System.Nullable<double> _value;
		
		private System.Nullable<int> _club_id;
		
		public GetNormalizedPercentileResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_curr_rank", DbType="Float NOT NULL")]
		public double curr_rank
		{
			get
			{
				return this._curr_rank;
			}
			set
			{
				if ((this._curr_rank != value))
				{
					this._curr_rank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_next_rank", DbType="Float NOT NULL")]
		public double next_rank
		{
			get
			{
				return this._next_rank;
			}
			set
			{
				if ((this._next_rank != value))
				{
					this._next_rank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prev_rank", DbType="Float NOT NULL")]
		public double prev_rank
		{
			get
			{
				return this._prev_rank;
			}
			set
			{
				if ((this._prev_rank != value))
				{
					this._prev_rank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float")]
		public System.Nullable<double> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_club_id", DbType="Int")]
		public System.Nullable<int> club_id
		{
			get
			{
				return this._club_id;
			}
			set
			{
				if ((this._club_id != value))
				{
					this._club_id = value;
				}
			}
		}
	}
	
	public partial class GetNormalizedPercentileV2Result
	{
		
		private double _curr_rank;
		
		private double _next_rank;
		
		private double _prev_rank;
		
		private System.Nullable<double> _value;
		
		private System.Nullable<int> _club_id;
		
		public GetNormalizedPercentileV2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_curr_rank", DbType="Float NOT NULL")]
		public double curr_rank
		{
			get
			{
				return this._curr_rank;
			}
			set
			{
				if ((this._curr_rank != value))
				{
					this._curr_rank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_next_rank", DbType="Float NOT NULL")]
		public double next_rank
		{
			get
			{
				return this._next_rank;
			}
			set
			{
				if ((this._next_rank != value))
				{
					this._next_rank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prev_rank", DbType="Float NOT NULL")]
		public double prev_rank
		{
			get
			{
				return this._prev_rank;
			}
			set
			{
				if ((this._prev_rank != value))
				{
					this._prev_rank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float")]
		public System.Nullable<double> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_club_id", DbType="Int")]
		public System.Nullable<int> club_id
		{
			get
			{
				return this._club_id;
			}
			set
			{
				if ((this._club_id != value))
				{
					this._club_id = value;
				}
			}
		}
	}
	
	public partial class RunIndexMaintenanceResult
	{
		
		private string _TableName;
		
		private string _IndexName;
		
		private System.Nullable<int> _FragPercent;
		
		public RunIndexMaintenanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string IndexName
		{
			get
			{
				return this._IndexName;
			}
			set
			{
				if ((this._IndexName != value))
				{
					this._IndexName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FragPercent", DbType="Int")]
		public System.Nullable<int> FragPercent
		{
			get
			{
				return this._FragPercent;
			}
			set
			{
				if ((this._FragPercent != value))
				{
					this._FragPercent = value;
				}
			}
		}
	}
	
	public partial class RunIndexMaintenanceResult1
	{
		
		private string _TableName;
		
		private string _IndexName;
		
		private System.Nullable<int> _FragPercent;
		
		public RunIndexMaintenanceResult1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string IndexName
		{
			get
			{
				return this._IndexName;
			}
			set
			{
				if ((this._IndexName != value))
				{
					this._IndexName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FragPercent", DbType="Int")]
		public System.Nullable<int> FragPercent
		{
			get
			{
				return this._FragPercent;
			}
			set
			{
				if ((this._FragPercent != value))
				{
					this._FragPercent = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
